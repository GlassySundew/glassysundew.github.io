{"version":3,"sources":["../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/shared/castledb/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/shared/castledb/BaseCdbSheet.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/shared/castledb/storage/sheets/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/shared/castledb/storage/sheets/Blast.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/view/blast/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/view/blast/BlastBoardView.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/Bootstrap.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/shared/castledb/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/shared/castledb/CdbAdapter.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/shared/castledb/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/shared/castledb/CdbData.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/blast/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/blast/Cell.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/gameState/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/gameState/DefeatState.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/service/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/service/FloodFillGroupFinder.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/Game.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/GameContext.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/view/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/view/GameController.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/service/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/service/GameProgress.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/service/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/service/GravityResolver.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/Grid.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/service/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/service/GridFactory.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/service/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/service/IdService.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/shared/castledb/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/shared/castledb/main.js","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/shared/castledb/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/shared/castledb/main.mjs?cjs=&original=.js","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/blast/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/blast/Piece.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/service/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/service/PieceFactory.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/shared/utils/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/shared/utils/Random.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/service/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/service/RandomService.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/gameState/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/gameState/ReadyState.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/service/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/service/RefillService.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/view/stats/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/view/stats/StatsView.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/gameState/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/gameState/TilesFallingState.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/shared/castledb/storage/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/shared/castledb/storage/Typings.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/gameState/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/domain/gameState/VictoryState.ts","../file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/view/file:/C:/Users/glassysundew/projects/cc-test/ct-test/assets/scripts/game/view/ViewFacade.ts"],"names":["StringValueWrapper","value","this","_proto","prototype","toString","parseJson","JSON","parse","parseNumber","Number","BaseCdbSheet","raw","resolver","dataById","dataByIndex","columns","sheets","sheetName","Map","Object","entries","byId","h","byIndex","sheet","name","_proto2","getColumnType","columnName","_this$columns$find","find","col","type","getById","id","entry","get","proxyWrapper","getByIndex","index","getAll","obj","_this","Array","isArray","map","item","__proxy__","Proxy","target","prop","undefined","columnDef","columnType","_this$sheets","_otherSheet$columns","resolved","otherSheet","otherColumns","_this$sheets2","_nestedSheet$columns","nestedSheetName","nestedSheet","nestedColumns","_ref","k","_hx_name","_hx_index","__enum__","_RF","pop","BlastGroupKeyId","ccclass","_decorator","property","requireComponent","_dec","_dec2","visible","_dec3","_dec4","Node","_dec5","Prefab","_dec6","_dec7","_dec8","_dec9","_class3","_Component","BlastBoardView","_len","arguments","length","args","_key","call","apply","concat","_initializerDefineProperty","_descriptor","_assertThisInitialized","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","width","height","cells","_inheritsLoose","refill","_refill","_asyncToGenerator","_regeneratorRuntime","mark","_callee","moves","_iterator","_step","move","x","y","holder","dest","wrap","_context","prev","next","_createForOfIteratorHelperLoose","done","fromX","toY","setPosition","cellToWorld","fromY","boardRoot","addChild","node","piece","setPiece","dropNode","stop","_x","_x2","initGrid","_initGrid","_callee2","_iterator2","_step2","cell","_context2","removeAllChildren","_x3","_x4","_x5","clear","_clear","_callee3","_iterator3","_step3","_this$cells$id$node","_context3","removeFromParent","_x6","dropGravity","_dropGravity","_callee4","promises","_iterator4","_step4","slot","promise","_context4","abrupt","push","Promise","all","_x7","worldToGridPosition","local","getComponent","UITransform","convertToNodeSpaceAR","Vec3","localToGridPosition","Vec2","isCoordinateValid","vec","dist","res","tween","to","FALL_DURATION_OFFSET","FALL_DURATION_MULT","position","easing","e","start","p","prefab","prefabForType","instantiate","BLUE","bluePiece","GREEN","greenPiece","PINK","pinkPiece","RED","redPiece","YELLOW","yellowPiece","localPosition","cellSizeX","cellSize","cellSpacing","cellSizeY","localOffsetX","localOffsetY","originPositionX","originPositionY","gridPositionX","Math","floor","gridPositionY","Component","_applyDecoratedDescriptor","_class2","configurable","enumerable","writable","initializer","_class","StatsView","Bootstrap","game","ready","cdbData","onLoad","init","_init","viewFacade","CdbAdapter","sent","ViewFacade","boardView","hud","Game","gameLevels","rawData","data","Data","run","CdbData","t0","rawDb","SheetConstructors","ctor","Error","includes","DefeatState","ctx","enter","_enter","_this$ctx$view$showDe","_this$ctx$view","view","showDefeat","handleTap","FloodFillGroupFinder","dirs","grid","_start$piece","visited","Set","queue","_step$value","dx","dy","nx","ny","n","getCell","has","add","from","levelConfig","state","idFactory","SimpleIdFactory","pieceFactory","PieceFactory","gridFactory","GridFactory","gravity","GravityResolver","randomService","RandomService","RefillService","create","GameContext","GameProgress","rules","maxMoves","targetScore","setState","bind","ReadyState","tap","tilePos","_this$state$handleTap","_this$state","_setState","cfg","rng","progress","GameController","_start","bootstrap","gridView","onEnable","input","on","Input","EventType","TOUCH_END","onTouchEnd","MOUSE_UP","onDestroy","off","getUILocation","score","movesLeft","addScore","delta","consumeTurn","_createClass","key","applyGravity","writeY","readY","fromCell","toCell","Grid","tileFactory","config","random","blast","gridSize","tileConfig","Cell","newId","__cjsMetaURL","import","define","exports","require","module","__filename","__dirname","resolveCdbData","rejectCdbData","cdb_Data","resolve","reject","$global","$_","$estr","js_Boot","__string_rec","$hxEnums","$extend","fields","proto","__name__","applyLang","xml","reference","onMissing","c","cdb_Lang","root","load","content","allowReload","_g","_g1","cdb_Parser","s","lines","cdb_Module","getSheetLines","reload","cdb_IndexId","EReg","r","opt","RegExp","split","join","match","global","lastIndex","m","exec","__class__","HxOverrides","cca","charCodeAt","substr","pos","len","remove","a","i","indexOf","splice","now","Date","Main","main","cc","resources","err","asset","console","error","_file","Reflect","field","o","hasOwnProperty","f","deleteField","copy","o2","Std","string","parseInt","v","isNaN","StringTools","htmlEscape","quotes","buf_b","_g_offset","_g_s","code","String","fromCodePoint","htmlUnescape","startsWith","lastIndexOf","isSpace","ltrim","l","rtrim","trim","Type","enumParameters","params","__constructs__","__params__","cdb_ColumnType","__ename__","TId","TString","TBool","TInt","TFloat","TEnum","values","TRef","TImage","TList","TCustom","TFlags","TColor","TLayer","TFile","TTilePos","TTileLayer","TDynamic","TProperties","TGradient","TCurve","TGuid","cdb_LocField","LName","LSub","LSingle","cdb_Ref","dataSheets","haxe_ds_StringMap","toLangXml","cdb_LangXml","nodeType","Xml","Element","haxe_Exception","thrown","XmlType","nodeName","NODES","hasText","Document","_g_current","_g_array","children","tmp","tmp1","r_spaces","nodeValue","html","haxe_xml_Access","get_innerHTML","_this_r","replace","_html","_elements","elements","hasNext","e1","getObjParent","log","getSub","getSheet","makeLocField","kind","ssub","fl","makeSheetFields","c1","_g3","f1","firstElement","ref","xsheets_h","out","props","hide","dataFiles","path","outLines","applySheet","idField","_g2","this1","refs","makeIdMap","delete","sdel","deleteSheet","loc","del","inf","getSheetHelpers","deleteObj","byID_h","d","el","ol","dl","c2","objects","outSub","applyRec","_g4","helpers","hid","byID","prevMissing","skipMissing","IGNORE_EXPORT_FIELD","_applyRec","str","oname","missingSetLocKey","e_keys","keys","e_length","e_current","buildXML","diff","locFields","getLines","buildSheetXml","linesData","getLocText","tabs","label","displayColumn","idCol","_g5","_g6","id1","idOpt","resolveField","attr","LANG_CONFIG","_g_access","_g_keys","_g_index","_g_value","prevData","currentLineData","locs","hasLoc","l1","l2","parent","psheet","sp","objs","o1","build","file","typeName","saveType","t","getType","editMode","typeStr","customTypes","cases","hasGroup","separators","ids","indexMap","i1","sep","_g7","_g8","_g9","i2","titles","_g10","_g11","i3","title","save","seps","oldSeps","uniqueIDs","uids_h","sep1","stringify","shift","cdb_Guid","haxe__$Int64__$_$_$Int64","tot","CVALUES","a_high","a_low","b","b1","high","low","_new","v1","CHARS","charAt","cdb_Index","initSheet","initLines","hasIndex","gid","sindex","group","__super__","cname","oldId","id_keys","id_length","id_current","oldObj","newObj","idx","approximate","toLowerCase","best","$keyValueIterator","haxe_ds_Map","message","previous","native","__previousException","__nativeException","get_native","haxe_ValueException","keyValueIterator","haxe_ds__$StringMap_StringMapKeyValueIterator","haxe_io_Error","Blocked","Overflow","OutsideBounds","Custom","con","$this","tostr","s2","hasp","substring","fromCharCode","defineProperty","__toStr","ArrayBuffer","slice","js_lib__$ArrayBuffer_ArrayBufferCompat","sliceImpl","req","loader","throwInvalidWrapper","Piece","Random","seed","A","C","M","nextRange","min","max","nextRangeInt","WeigthedRandomizer","generator","items","cumulativeWeights","cumulativeWeight","maxWeight","randomWeight","colorGroupRandomizer","randomSeed","colorGroupProbabilities","toColorGroupProbabilities","colorGroupSetup","chipConfigs","chipConfig","colorGroup","probability","clusters","updateStats","checkGameCompletionCondition","cluster","forEach","PTS_PER_TILE","then","TilesFallingState","updateTurns","updateScore","hasWon","VictoryState","outOfMoves","result","additivesCount","Label","gameEnd","active","DEFEAT_LOCALE","showVictory","VICTORY_LOCALE","scoreCounter","turnsCounter","gravityBeforePromise","spawnMoves","GameLevelsSheet","_BaseCdbSheet","BlastGroupsSheet","_BaseCdbSheet2","blastGroups","_this$ctx$view$showVi"],"mappings":"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","file":"all.js","sourcesContent":["import { SheetsClassMap } from \"db://assets/scripts/shared/castledb/storage/Typings\";\r\n\r\ntype RawColumnType = {\r\n    _hx_name?: string;\r\n    _hx_index: number;\r\n    __enum__: string;\r\n    sheet?: string;\r\n};\r\n\r\ntype RawColumnDefinition = {\r\n    name: string;\r\n    type: RawColumnType;\r\n};\r\n\r\nexport type RawSheetData<T> = {\r\n    name: string;\r\n    all: T[];\r\n    sheet: {\r\n        name: string;\r\n        columns: RawColumnDefinition[];\r\n        lines: T[];\r\n        separators: any[];\r\n        props: Record<string, any>;\r\n    };\r\n    byId: { h: Record<string, T> };\r\n    byIndex: T[];\r\n};\r\n\r\nexport class StringValueWrapper<T = any> {\r\n    constructor(private value: string) { }\r\n\r\n    toString() { return this.value; }\r\n    parseJson<U extends T>(): U { return JSON.parse(this.value); }\r\n    parseNumber(): number { return Number(this.value); }\r\n}\r\n\r\n\r\nexport class BaseCdbSheet<T extends object> {\r\n\r\n    protected dataById: Map<string, T>;\r\n    protected dataByIndex: T[];\r\n    protected columns: RawColumnDefinition[];\r\n    protected sheets: Partial<SheetsClassMap>;\r\n    protected sheetName: string;\r\n\r\n    constructor(raw: RawSheetData<T>, resolver: Partial<SheetsClassMap>) {\r\n\r\n        this.dataById = new Map(Object.entries(raw.byId.h));\r\n        this.dataByIndex = raw.byIndex;\r\n        this.columns = raw.sheet.columns;\r\n        this.sheets = resolver;\r\n        this.sheetName = raw.name;\r\n    }\r\n\r\n    protected getColumnType(columnName: string): RawColumnType | undefined {\r\n        return this.columns.find(col => col.name === columnName)?.type;\r\n    }\r\n\r\n    public getById(id: string): T | undefined {\r\n\r\n        const entry = this.dataById.get(id);\r\n\r\n        if (!entry)\r\n            return undefined;\r\n\r\n        return this.proxyWrapper(entry, this.columns, this.sheetName) as T;\r\n    }\r\n\r\n    public getByIndex(index: number): T | undefined {\r\n        return this.proxyWrapper(this.dataByIndex[index], this.columns, this.sheetName) as T;\r\n    }\r\n\r\n    public getAll(): T[] {\r\n        return this.proxyWrapper(this.dataByIndex, this.columns, this.sheetName) as T[];\r\n    }\r\n\r\n    // Получаем ссылку на все sheets через resolver\r\n    private proxyWrapper(obj: any, columns: RawColumnDefinition[], sheetName: string): any {\r\n\r\n        if (Array.isArray(obj)) {\r\n            return obj.map(item => this.proxyWrapper(item, columns, sheetName));\r\n        }\r\n\r\n        if (obj && typeof obj === \"object\") {\r\n\r\n            if (!obj.__proxy__) {\r\n\r\n                obj.__proxy__ = new Proxy(obj, {\r\n\r\n                    get: (target, prop) => {\r\n\r\n                        // Не проксировать служебные свойства и символы\r\n                        if (prop === \"__proxy__\" || typeof prop === \"symbol\") {\r\n\r\n                            return target[prop];\r\n                        }\r\n\r\n                        // Не проксировать уже проксированные объекты\r\n                        if (target[prop] && target[prop].__proxy__) {\r\n\r\n                            return target[prop].__proxy__;\r\n                        }\r\n\r\n                        if (typeof prop === \"string\" && target[prop] !== undefined) {\r\n\r\n                            // Только для правил (`rules` sheet) и/или для вписанных JSON структур\r\n                            if (prop === \"value\" && typeof target[prop] === \"string\") {\r\n\r\n                                return new StringValueWrapper(target[prop]);\r\n                            }\r\n\r\n                            const columnDef = columns.find(col => col.name === prop);\r\n                            const columnType = columnDef?.type;\r\n\r\n                            // Для ссылок на другие таблицы\r\n                            if (columnType?.sheet && typeof target[prop] === \"string\") {\r\n\r\n                                const resolved = this.sheets[columnType.sheet].getById(target[prop]);\r\n                                const otherSheet = this.sheets?.[columnType.sheet];\r\n                                const otherColumns = otherSheet?.columns ?? [];\r\n                                return this.proxyWrapper(resolved, otherColumns, columnType.sheet);\r\n                            }\r\n\r\n                            // Для вложенных props/list\r\n                            if (typeof target[prop] === \"object\" && target[prop] !== null) {\r\n\r\n                                // Имя вложенной таблицы\r\n                                const nestedSheetName = sheetName + \"@\" + prop;\r\n                                const nestedSheet = this.sheets?.[nestedSheetName];\r\n                                const nestedColumns = nestedSheet?.columns ?? Object.entries(target[prop])\r\n                                    .map(([k, v]) => ({\r\n\r\n                                        name: k,\r\n                                        type: { _hx_name: undefined, _hx_index: -1, __enum__: \"cdb.ColumnType\" }\r\n                                    }));\r\n\r\n                                return this.proxyWrapper(target[prop], nestedColumns, nestedSheetName);\r\n                            }\r\n                        }\r\n                        return target[prop];\r\n                    }\r\n                });\r\n            }\r\n\r\n            return obj.__proxy__;\r\n        }\r\n        return obj;\r\n    }\r\n}","\r\nexport enum BlastGroupKeyId {\r\n\r\n    YELLOW = \"yellow\",\r\n    RED = \"red\",\r\n    GREEN = \"green\",\r\n    PINK = \"pink\",\r\n    BLUE = \"blue\",\r\n\r\n}\r\n\r\nexport interface BlastGroupConfig {\r\n\r\n    id: BlastGroupKeyId;\r\n}\r\n\r\nexport interface IElementAnimations {\r\n\r\n    createDuration: number;\r\n    moveDuration: number;\r\n}\r\n","import { _decorator, Component, instantiate, log, Node, Prefab, tween, UITransform, Vec2, Vec3 } from 'cc';\r\nimport { ICell, IViewPort, IPiece } from 'db://assets/scripts/game/domain/Contract';\r\nimport { DropMove } from 'db://assets/scripts/game/domain/service/GravityResolver';\r\nimport { SpawnMove } from 'db://assets/scripts/game/domain/service/RefillService';\r\nimport { BlastGroupKeyId } from 'db://assets/scripts/shared/castledb/storage/sheets/Blast';\r\n\r\nconst { ccclass, property, requireComponent } = _decorator;\r\n\r\ntype CellNode = { node: Node; piece?: IPiece | null };\r\n\r\n@ccclass(\"BlastBoardView\")\r\nexport class BlastBoardView extends Component {\r\n\r\n\tprivate static readonly FALL_DURATION_OFFSET = 0.15;\r\n\tprivate static readonly FALL_DURATION_MULT = 0.05;\r\n\r\n\t@property({ visible: true })\r\n\tpublic readonly cellSize: Vec2 = new Vec2(200, 200);\r\n\r\n\t@property({ visible: true })\r\n\tpublic readonly cellSpacing: Vec2 = new Vec2(10, 10);\r\n\r\n\t@property(Node)\r\n\tpublic boardRoot: Node;\r\n\r\n\t@property(Prefab)\r\n\tprivate redPiece: Prefab;\r\n\r\n\t@property(Prefab)\r\n\tprivate pinkPiece: Prefab;\r\n\r\n\t@property(Prefab)\r\n\tprivate bluePiece: Prefab;\r\n\r\n\t@property(Prefab)\r\n\tprivate greenPiece: Prefab;\r\n\r\n\t@property(Prefab)\r\n\tprivate yellowPiece: Prefab;\r\n\r\n\tprivate width = 0;\r\n\tprivate height = 0;\r\n\tprivate cells: CellNode[] = [];\r\n\r\n\tpublic async refill(\r\n\t\tmoves: ReadonlyArray<SpawnMove>,\r\n\t\tcells: ReadonlyArray<ICell>\r\n\t): Promise<void> {\r\n\r\n\t\tfor (const move of moves) {\r\n\r\n\t\t\tconst x = move.fromX;\r\n\t\t\tconst y = move.toY;\r\n\r\n\t\t\tconst holder = new Node(`c_${x}_${y}`);\r\n\t\t\tholder.setPosition(this.cellToWorld(x, move.fromY));\r\n\t\t\tthis.boardRoot.addChild(holder);\r\n\t\t\tthis.cells[y * this.width + x] = { node: holder, piece: null };\r\n\r\n\t\t\tthis.setPiece(x, y, cells[y * this.width + x].piece);\r\n\r\n\t\t\tconst dest = this.cellToWorld(move.fromX, move.toY);\r\n\t\t\tthis.dropNode(holder, move.fromY - move.toY, dest);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async initGrid(width: number, height: number, cells: ReadonlyArray<ICell>) {\r\n\r\n\t\tthis.width = width; this.height = height;\r\n\t\tthis.boardRoot.removeAllChildren();\r\n\t\tthis.cells = new Array(width * height);\r\n\r\n\t\tfor (let y = 0; y < height; y++) {\r\n\r\n\t\t\tfor (let x = 0; x < width; x++) {\r\n\r\n\t\t\t\tconst holder = new Node(`c_${x}_${y}`);\r\n\t\t\t\tholder.setPosition(this.cellToWorld(x, y));\r\n\t\t\t\tthis.boardRoot.addChild(holder);\r\n\t\t\t\tthis.cells[y * this.width + x] = { node: holder, piece: null };\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const cell of cells)\r\n\t\t\tthis.setPiece(cell.x, cell.y, cell.piece);\r\n\t}\r\n\r\n\tpublic async clear(cells: ReadonlyArray<ICell>): Promise<void> {\r\n\r\n\t\tfor (const cell of cells) {\r\n\r\n\t\t\tconst id = cell.y * this.width + cell.x;\r\n\t\t\tthis.cells[id].node?.removeFromParent();\r\n\t\t\tthis.cells[id].node = null;\r\n\t\t\tthis.cells[id].piece = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async dropGravity(moves: readonly DropMove[]) {\r\n\r\n\t\tconst promises: Promise<void>[] = [];\r\n\r\n\t\tfor (const move of moves) {\r\n\r\n\t\t\tconst slot = this.cells[move.fromY * this.width + move.fromX];\r\n\t\t\tconst node = slot.node;\r\n\r\n\t\t\tif (!node)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tconst dest = this.cellToWorld(move.fromX, move.toY);\r\n\r\n\t\t\tconst promise = this.dropNode(node, move.fromY - move.toY, dest);\r\n\t\t\tpromises.push(promise);\r\n\r\n\t\t\tthis.cells[move.fromY * this.width + move.fromX].node = null;\r\n\t\t\tthis.cells[move.toY * this.width + move.fromX].node = node;\r\n\t\t}\r\n\r\n\t\tawait Promise.all(promises);\r\n\t}\r\n\r\n\tpublic worldToGridPosition(x: number, y: number): Vec2 {\r\n\r\n\t\tconst local = this.boardRoot\r\n\t\t\t.getComponent(UITransform)\r\n\t\t\t.convertToNodeSpaceAR(new Vec3(x, y, 0));\r\n\r\n\t\treturn this.localToGridPosition(new Vec2(local.x, local.y));\r\n\t}\r\n\r\n\tpublic isCoordinateValid(vec: Vec2): Boolean {\r\n\r\n\t\treturn (vec.x >= 0 && vec.y >= 0 && vec.x < this.width && vec.y < this.height);\r\n\t}\r\n\r\n\tprivate dropNode(node: Node, dist: number, dest: Vec3) {\r\n\r\n\t\treturn new Promise<void>(res => {\r\n\t\t\ttween(node)\r\n\t\t\t\t.to(\r\n\t\t\t\t\tBlastBoardView.FALL_DURATION_OFFSET + BlastBoardView.FALL_DURATION_MULT * dist,\r\n\t\t\t\t\t{ position: dest },\r\n\t\t\t\t\t{ easing: \"quadIn\" })\r\n\t\t\t\t.call((e) => res())\r\n\t\t\t\t.start();\r\n\t\t});\r\n\t}\r\n\r\n\tprivate setPiece(x: number, y: number, p: IPiece | null) {\r\n\r\n\t\tconst slot = this.cells[y * this.width + x];\r\n\r\n\t\tif (!p)\r\n\t\t\treturn;\r\n\r\n\t\tlet prefab = this.prefabForType(p.type.id);\r\n\t\tconst node = instantiate(prefab);\r\n\r\n\t\tslot.node.addChild(node);\r\n\t\tslot.piece = p;\r\n\t}\r\n\r\n\tprivate prefabForType(id: BlastGroupKeyId): Prefab {\r\n\r\n\t\tswitch (id) {\r\n\t\t\tcase BlastGroupKeyId.BLUE: return this.bluePiece;\r\n\t\t\tcase BlastGroupKeyId.GREEN: return this.greenPiece;\r\n\t\t\tcase BlastGroupKeyId.PINK: return this.pinkPiece;\r\n\t\t\tcase BlastGroupKeyId.RED: return this.redPiece;\r\n\t\t\tcase BlastGroupKeyId.YELLOW: return this.yellowPiece;\r\n\t\t\tdefault: return this.yellowPiece;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate localToGridPosition(localPosition: Vec2): Vec2 {\r\n\r\n\t\tconst cellSizeX = this.cellSize.x + this.cellSpacing.x;\r\n\t\tconst cellSizeY = this.cellSize.y + this.cellSpacing.y;\r\n\r\n\t\tconst localOffsetX = 0.5 * cellSizeX * this.width;\r\n\t\tconst localOffsetY = 0.5 * cellSizeY * this.height;\r\n\r\n\t\tconst originPositionX = localPosition.x + localOffsetX;\r\n\t\tconst originPositionY = localPosition.y + localOffsetY;\r\n\r\n\t\tconst gridPositionX = Math.floor(originPositionX / cellSizeX);\r\n\t\tconst gridPositionY = Math.floor(originPositionY / cellSizeY);\r\n\r\n\t\tconst gridPosition = new Vec2(gridPositionX, gridPositionY);\r\n\r\n\t\treturn gridPosition;\r\n\t}\r\n\r\n\tprivate cellToWorld(x: number, y: number) {\r\n\r\n\t\tconst cellSizeX = this.cellSize.x + this.cellSpacing.x;\r\n\t\tconst cellSizeY = this.cellSize.y + this.cellSpacing.y;\r\n\r\n\t\tconst originPositionX = cellSizeX * (0.5 + x);\r\n\t\tconst originPositionY = cellSizeY * (0.5 + y);\r\n\r\n\t\tconst localOffsetX = 0.5 * cellSizeX * this.width;\r\n\t\tconst localOffsetY = 0.5 * cellSizeY * this.height;\r\n\r\n\t\treturn new Vec3(originPositionX - localOffsetX, originPositionY - localOffsetY);\r\n\t}\r\n}","import { _decorator, Component, Vec2 } from 'cc';\r\nimport { IViewPort } from 'db://assets/scripts/game/domain/Contract';\r\nimport { Game } from 'db://assets/scripts/game/domain/Game';\r\nimport { BlastBoardView } from 'db://assets/scripts/game/view/blast/BlastBoardView';\r\nimport { StatsView } from 'db://assets/scripts/game/view/stats/StatsView';\r\nimport { ViewFacade } from 'db://assets/scripts/game/view/ViewFacade';\r\nimport { CdbAdapter } from 'db://assets/scripts/shared/castledb/CdbAdapter';\r\nimport { CdbData } from 'db://assets/scripts/shared/castledb/CdbData';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"Bootstrap\")\r\nexport class Bootstrap extends Component {\r\n\r\n\t@property(BlastBoardView)\r\n\tprivate boardView: BlastBoardView;\r\n\r\n\t@property(StatsView)\r\n\tprivate hud: StatsView;\r\n\r\n\tpublic game: Game;\r\n\tpublic ready: Promise<Game>;\r\n\r\n\tprivate cdbData: CdbData;\r\n\r\n\tprotected onLoad(): void {\r\n\r\n\t\tthis.ready = this.init();\r\n\t}\r\n\r\n\tprivate async init(): Promise<Game> {\r\n\r\n\t\tthis.cdbData = await new CdbAdapter().init();\r\n\t\tconst viewFacade = new ViewFacade(this.boardView, this.hud);\r\n\r\n\t\tthis.game = new Game(\r\n\t\t\tthis.cdbData.gameLevels.getById(\"one\"),\r\n\t\t\tviewFacade\r\n\t\t);\r\n\r\n\t\treturn this.game;\r\n\t}\r\n}","import * as Data from \"db://assets/scripts/shared/castledb/main.js\";\r\nimport { CdbData } from \"db://assets/scripts/shared/castledb/CdbData\";\r\n\r\nexport class CdbAdapter {\r\n\r\n    public async init(): Promise<CdbData> {\r\n\r\n        try {\r\n            const rawData = await Data.default.run();\r\n            const data = new CdbData(rawData);\r\n\r\n            return data;\r\n\r\n        } catch (e) {\r\n\r\n            throw \"an error occured while parsing cdb: \" + e;\r\n        }\r\n    }\r\n}","import { BaseCdbSheet, RawSheetData } from \"db://assets/scripts/shared/castledb/BaseCdbSheet\";\r\nimport { SheetsClassMap, SheetConstructors } from \"db://assets/scripts/shared/castledb/storage/Typings\";\r\n\r\nexport interface CdbData extends SheetsClassMap { }\r\n\r\nexport class CdbData {\r\n\r\n    private sheets: Partial<SheetsClassMap> = {};\r\n\r\n    constructor(rawDb: Record<string, RawSheetData<any>>) {\r\n\r\n        for (const name in SheetConstructors) {\r\n            const ctor = SheetConstructors[name];\r\n            if (!rawDb[name])\r\n                throw new Error(`pre-defined sheet ${name} is not found in cdb!`);\r\n            const sheet = new ctor(rawDb[name], this.sheets);\r\n            // @ts-ignore\r\n            this[name] = this.sheets[name] = sheet;\r\n        }\r\n\r\n        for (const name in rawDb) {\r\n            if (name.includes(\"@\") && !this.sheets[name]) {\r\n                const sheet = new BaseCdbSheet<any>(rawDb[name], this.sheets);\r\n                // @ts-ignore\r\n                this[name] = this.sheets[name] = sheet;\r\n            }\r\n        }\r\n\r\n    }\r\n}","import { ICell, IPiece } from \"db://assets/scripts/game/domain/Contract\";\r\n\r\nexport class Cell implements ICell {\r\n\r\n    public readonly x: number;\r\n    public readonly y: number;\r\n    public readonly piece: IPiece;\r\n\r\n    constructor(x: number, y: number, piece: IPiece) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.piece = piece;\r\n    }\r\n}","import { ICell, IGameState } from \"db://assets/scripts/game/domain/Contract\";\r\nimport { GameContext } from \"db://assets/scripts/game/domain/GameContext\";\r\n\r\nexport class DefeatState implements IGameState {\r\n\r\n\tconstructor(private ctx: GameContext) { }\r\n\r\n\tasync enter() {\r\n\t\tawait this.ctx.view.showDefeat?.();\r\n\t}\r\n\r\n\thandleTap(cell: ICell): Promise<void> | void { }\r\n}\r\n","import { ICell, IGrid, IGroupFindService } from \"db://assets/scripts/game/domain/Contract\";\r\n\r\n\r\nexport class FloodFillGroupFinder implements IGroupFindService {\r\n\r\n\tprivate dirs = [[1, 0], [-1, 0], [0, 1], [0, -1]] as const;\r\n\r\n\tfind(grid: IGrid, start: ICell): ICell[] {\r\n\r\n\t\tconst target = start.piece?.type;\r\n\r\n\t\tif (target === undefined) return [];\r\n\r\n\t\tconst visited = new Set<ICell>([start]);\r\n\t\tconst queue: ICell[] = [start];\r\n\r\n\t\twhile (queue.length) {\r\n\r\n\t\t\tconst cell = queue.pop();\r\n\r\n\t\t\tfor (const [dx, dy] of this.dirs) {\r\n\r\n\t\t\t\tconst nx = cell.x + dx, ny = cell.y + dy;\r\n\r\n\t\t\t\tif (nx < 0 || nx >= grid.width || ny < 0 || ny >= grid.height)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tconst n = grid.getCell(nx, ny);\r\n\r\n\t\t\t\tif (visited.has(n))\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tif (n.piece && n.piece.type === target) {\r\n\t\t\t\t\tvisited.add(n);\r\n\t\t\t\t\tqueue.push(n);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Array.from(visited);\r\n\t}\r\n}","import { Vec2 } from \"cc\";\r\nimport {\r\n\tIViewPort,\r\n\tIGameState,\r\n\tIGravityResolver,\r\n\tIGrid,\r\n\tIGridFactory,\r\n\tIRefillService,\r\n\tIRng\r\n} from \"db://assets/scripts/game/domain/Contract\";\r\nimport { GameContext } from \"db://assets/scripts/game/domain/GameContext\";\r\nimport { ReadyState } from \"db://assets/scripts/game/domain/gameState/ReadyState\";\r\nimport { GameProgress } from \"db://assets/scripts/game/domain/service/GameProgress\";\r\nimport { GravityResolver } from \"db://assets/scripts/game/domain/service/GravityResolver\";\r\nimport { GridFactory } from \"db://assets/scripts/game/domain/service/GridFactory\";\r\nimport { SimpleIdFactory } from \"db://assets/scripts/game/domain/service/IdService\";\r\nimport { PieceFactory } from \"db://assets/scripts/game/domain/service/PieceFactory\";\r\nimport { RandomService } from \"db://assets/scripts/game/domain/service/RandomService\";\r\nimport { RefillService } from \"db://assets/scripts/game/domain/service/RefillService\";\r\nimport { ILevelConfig } from \"db://assets/scripts/shared/castledb/storage/sheets/Levels\";\r\n\r\nexport class Game {\r\n\r\n\tpublic readonly grid: IGrid;\r\n\r\n\tprivate ctx: GameContext;\r\n\tprivate state: IGameState;\r\n\r\n\tconstructor(levelConfig: ILevelConfig, view: IViewPort) {\r\n\r\n\t\tconst idFactory = new SimpleIdFactory();\r\n\t\tconst pieceFactory = new PieceFactory(idFactory);\r\n\t\tconst gridFactory = new GridFactory(pieceFactory);\r\n\t\tconst gravity = new GravityResolver();\r\n\t\tconst randomService = new RandomService(levelConfig);\r\n\t\tconst refill = new RefillService();\r\n\r\n\t\tthis.grid = gridFactory.create(levelConfig, randomService);\r\n\r\n\t\tthis.ctx = new GameContext(\r\n\t\t\tlevelConfig,\r\n\t\t\tthis.grid,\r\n\t\t\tview,\r\n\t\t\trandomService,\r\n\t\t\tgravity,\r\n\t\t\trefill,\r\n\t\t\tidFactory,\r\n\t\t\tnew GameProgress(0, levelConfig.rules.maxMoves, levelConfig.rules.targetScore),\r\n\t\t\tthis.setState.bind(this)\r\n\t\t);\r\n\r\n\t\tthis.setState(new ReadyState(this.ctx));\r\n\t}\r\n\r\n\tpublic tap(tilePos: Vec2) {\r\n\r\n\t\tconst cell = this.ctx.grid.getCell(tilePos.x, tilePos.y);\r\n\t\tthis.state.handleTap?.(cell);\r\n\t}\r\n\r\n\tprivate async setState(next: IGameState) {\r\n\r\n\t\tthis.state = next;\r\n\r\n\t\tif (this.state.enter)\r\n\t\t\tawait this.state.enter();\r\n\t}\r\n}","import { IViewPort, IGameState, IGravityResolver, IGrid, IIdFactory, IRefillService, IRng } from \"db://assets/scripts/game/domain/Contract\";\r\nimport { GameProgress } from \"db://assets/scripts/game/domain/service/GameProgress\";\r\nimport { ILevelConfig } from \"db://assets/scripts/shared/castledb/storage/sheets/Levels\";\r\n\r\n\r\nexport class GameContext {\r\n\r\n\tconstructor(\r\n\t\tpublic readonly cfg: ILevelConfig,\r\n\t\tpublic readonly grid: IGrid,\r\n\t\tpublic readonly view: IViewPort,\r\n\t\tpublic readonly rng: IRng,\r\n\t\tpublic readonly gravity: IGravityResolver,\r\n\t\tpublic readonly refill: IRefillService,\r\n\t\tpublic readonly idFactory: IIdFactory,\r\n\t\tpublic readonly progress: GameProgress,\r\n\t\tpublic readonly setState: (s: IGameState) => void\r\n\t) { }\r\n\r\n}","import { _decorator, Component, EventMouse, EventTouch, input, Input, log, Node } from 'cc';\r\nimport { Bootstrap } from 'db://assets/scripts/game/Bootstrap';\r\nimport { Game } from 'db://assets/scripts/game/domain/Game';\r\nimport { BlastBoardView } from 'db://assets/scripts/game/view/blast/BlastBoardView';\r\nimport { game, view } from 'cc';\r\n\r\nconst { ccclass, property, requireComponent } = _decorator;\r\n\r\n@ccclass(\"GameController\")\r\n@requireComponent(BlastBoardView)\r\nexport class GameController extends Component {\r\n\r\n\t@property(BlastBoardView)\r\n\tprivate gridView: BlastBoardView;\r\n\r\n\t@property(Bootstrap)\r\n\tprivate bootstrap: Bootstrap;\r\n\r\n\tprivate game: Awaited<Game>;\r\n\r\n\tasync start() {\r\n\r\n\t\tawait this.bootstrap.ready;\r\n\t\tthis.game = this.bootstrap.game;\r\n\r\n\t\tconst grid = this.game.grid;\r\n\t\tawait this.gridView.initGrid(grid.width, grid.height, grid.cells);\r\n\t}\r\n\r\n\tprotected onEnable(): void {\r\n\r\n\t\tinput.on(Input.EventType.TOUCH_END, this.onTouchEnd, this);\r\n\t\tinput.on(Input.EventType.MOUSE_UP, this.onTouchEnd, this);\r\n\t}\r\n\r\n\tonDestroy() {\r\n\r\n\t\tinput.off(Input.EventType.TOUCH_END, this.onTouchEnd, this);\r\n\t\tinput.off(Input.EventType.MOUSE_UP, this.onTouchEnd, this);\r\n\t}\r\n\r\n\tprivate onTouchEnd(e: EventTouch | EventMouse) {\r\n\r\n\t\tconst p = e.getUILocation();\r\n\t\tconst vec = this.gridView.worldToGridPosition(p.x, p.y);\r\n\r\n\t\tif (!this.gridView.isCoordinateValid(vec))\r\n\t\t\treturn;\r\n\r\n\t\tthis.game.tap(vec);\r\n\t}\r\n}","\r\nexport class GameProgress {\r\n\r\n\tpublic get hasWon() {\r\n\t\treturn this.score >= this.targetScore;\r\n\t}\r\n\r\n\tpublic get outOfMoves() {\r\n\t\treturn this.movesLeft <= 0;\r\n\t}\r\n\r\n\tconstructor(\r\n\t\tpublic score = 0,\r\n\t\tpublic movesLeft = 0,\r\n\t\tpublic readonly targetScore = 0\r\n\t) { }\r\n\r\n\tpublic addScore(delta: number) {\r\n\r\n\t\tthis.score += delta; return this.score;\r\n\t}\r\n\r\n\tpublic consumeTurn() {\r\n\r\n\t\tif (this.movesLeft > 0)\r\n\t\t\tthis.movesLeft--;\r\n\r\n\t\treturn this.movesLeft;\r\n\t}\r\n}","import { log } from \"cc\";\r\nimport { IGravityResolver, IGrid } from \"db://assets/scripts/game/domain/Contract\";\r\n\r\n\r\nexport interface DropMove {\r\n\r\n\tid: string;\r\n\tfromX: number;\r\n\tfromY: number;\r\n\ttoY: number;\r\n}\r\n\r\nexport class GravityResolver implements IGravityResolver {\r\n\r\n\tapplyGravity(grid: IGrid): DropMove[] {\r\n\r\n\t\tconst moves: DropMove[] = [];\r\n\r\n\t\tfor (let x = 0; x < grid.width; x++) {\r\n\r\n\t\t\tlet writeY = 0;\r\n\r\n\t\t\tfor (let readY = 0; readY < grid.height; readY++) {\r\n\r\n\t\t\t\tconst fromCell = grid.getCell(x, readY);\r\n\r\n\t\t\t\tif (!fromCell.piece)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tif (readY !== writeY) {\r\n\r\n\t\t\t\t\tconst toCell = grid.getCell(x, writeY);\r\n\r\n\t\t\t\t\tmoves.push({\r\n\t\t\t\t\t\tid: fromCell.piece.id,\r\n\t\t\t\t\t\tfromX: x,\r\n\t\t\t\t\t\tfromY: readY,\r\n\t\t\t\t\t\ttoY: writeY,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\ttoCell.piece = fromCell.piece;\r\n\t\t\t\t\tfromCell.piece = null;\r\n\t\t\t\t}\r\n\t\t\t\twriteY++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn moves;\r\n\t}\r\n}","import { ICell, IGrid, IPiece } from \"db://assets/scripts/game/domain/Contract\";\r\n\r\nexport class Grid implements IGrid {\r\n\r\n    public readonly width: number;\r\n    public readonly height: number;\r\n    public readonly cells: ICell[];\r\n\r\n    constructor(width: number, height: number, cells: ICell[]) {\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n        this.cells = cells;\r\n    }\r\n\r\n    public getCell(x: number, y: number): ICell {\r\n        return this.cells[y * this.width + x];\r\n    }\r\n}","import { Grid } from \"db://assets/scripts/game/domain/Grid\";\r\nimport { RandomService } from \"db://assets/scripts/game/domain/service/RandomService\";\r\nimport { PieceFactory } from \"db://assets/scripts/game/domain/service/PieceFactory\";\r\nimport { ILevelConfig } from \"db://assets/scripts/shared/castledb/storage/sheets/Levels\";\r\nimport { ICell, IGrid, IGridFactory, IRng } from \"db://assets/scripts/game/domain/Contract\";\r\nimport { Cell } from \"db://assets/scripts/game/domain/blast/Cell\";\r\n\r\nexport class GridFactory implements IGridFactory {\r\n\r\n\tprivate readonly pieceFactory: PieceFactory;\r\n\r\n\tconstructor(tileFactory: PieceFactory) {\r\n\r\n\t\tthis.pieceFactory = tileFactory;\r\n\t}\r\n\r\n\tpublic create(config: ILevelConfig, random: IRng): IGrid {\r\n\r\n\t\tconst height = config.blast.gridSize.y;\r\n\t\tconst width = config.blast.gridSize.x;\r\n\t\tconst cells: ICell[] = [];\r\n\r\n\t\tfor (let y = 0; y < height; y++) {\r\n\r\n\t\t\tfor (let x = 0; x < width; x++) {\r\n\r\n\t\t\t\tconst tileConfig = random.next();\r\n\t\t\t\tconst piece = this.pieceFactory.create(tileConfig);\r\n\t\t\t\tcells[y * width + x] = new Cell(x, y, piece);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new Grid(width, height, cells);\r\n\t}\r\n}","import { IIdFactory } from \"db://assets/scripts/game/domain/Contract\";\r\n\r\nexport class SimpleIdFactory implements IIdFactory {\r\n\r\n    private n = 0;\r\n\r\n    newId(): string { return `p_${this.n++}`; }\r\n}","import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nlet _cjsExports;\nlet _run;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n // Generated by Haxe 4.3.4\r\n\r\n function run() {\r\n \tlet resolveCdbData;\r\n \tlet rejectCdbData;\r\n\r\n \tvar cdb_Data = new Promise((resolve, reject) => {\r\n \t\tresolveCdbData = resolve;\r\n \t\trejectCdbData = reject;\r\n \t});\r\n\r\n \t(function ($global) {\r\n \t\t\"use strict\";\r\n \t\tvar $estr = function () {\r\n \t\t\t\treturn js_Boot.__string_rec(this, \"\");\r\n \t\t\t},\r\n \t\t\t$hxEnums = $hxEnums || {},\r\n \t\t\t$_;\r\n \t\tfunction $extend(from, fields) {\r\n \t\t\tvar proto = Object.create(from);\r\n \t\t\tfor (var name in fields) proto[name] = fields[name];\r\n \t\t\tif (fields.toString !== Object.prototype.toString) proto.toString = fields.toString;\r\n \t\t\treturn proto;\r\n \t\t}\r\n \t\tvar Data = function () {};\r\n \t\tData.__name__ = \"Data\";\r\n \t\tData.applyLang = function (xml, reference, onMissing) {\r\n \t\t\tvar c = new cdb_Lang(Data.root);\r\n \t\t\tif (onMissing != null) {\r\n \t\t\t\tc.onMissing = onMissing;\r\n \t\t\t}\r\n \t\t\treturn c.apply(xml, reference);\r\n \t\t};\r\n \t\tData.load = function (content, allowReload) {\r\n \t\t\tif (allowReload == null) {\r\n \t\t\t\tallowReload = false;\r\n \t\t\t}\r\n \t\t\tData.root = cdb_Parser.parse(content, false);\r\n \t\t\tvar _g = 0;\r\n \t\t\tvar _g1 = Data.root.sheets;\r\n \t\t\twhile (_g < _g1.length) {\r\n \t\t\t\tvar s = _g1[_g];\r\n \t\t\t\t++_g;\r\n \t\t\t\tif (s.lines != null && s.lines.length == 0) {\r\n \t\t\t\t\ts.lines = cdb_Module.getSheetLines(Data.root.sheets, s);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tfor (const sheet of Data.root.sheets) {\r\n \t\t\t\tif (allowReload && Data[sheet.name] != null) {\r\n \t\t\t\t\tData[sheet.name].reload(Data.root);\r\n \t\t\t\t} else {\r\n \t\t\t\t\tData[sheet.name] = new cdb_IndexId(Data.root, sheet.name);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t};\r\n \t\tvar EReg = function (r, opt) {\r\n \t\t\tthis.r = new RegExp(r, opt.split(\"u\").join(\"\"));\r\n \t\t};\r\n \t\tEReg.__name__ = \"EReg\";\r\n \t\tEReg.prototype = {\r\n \t\t\tmatch: function (s) {\r\n \t\t\t\tif (this.r.global) {\r\n \t\t\t\t\tthis.r.lastIndex = 0;\r\n \t\t\t\t}\r\n \t\t\t\tthis.r.m = this.r.exec(s);\r\n \t\t\t\tthis.r.s = s;\r\n \t\t\t\treturn this.r.m != null;\r\n \t\t\t},\r\n \t\t\t__class__: EReg,\r\n \t\t};\r\n \t\tvar HxOverrides = function () {};\r\n \t\tHxOverrides.__name__ = \"HxOverrides\";\r\n \t\tHxOverrides.cca = function (s, index) {\r\n \t\t\tvar x = s.charCodeAt(index);\r\n \t\t\tif (x != x) {\r\n \t\t\t\treturn undefined;\r\n \t\t\t}\r\n \t\t\treturn x;\r\n \t\t};\r\n \t\tHxOverrides.substr = function (s, pos, len) {\r\n \t\t\tif (len == null) {\r\n \t\t\t\tlen = s.length;\r\n \t\t\t} else if (len < 0) {\r\n \t\t\t\tif (pos == 0) {\r\n \t\t\t\t\tlen = s.length + len;\r\n \t\t\t\t} else {\r\n \t\t\t\t\treturn \"\";\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\treturn s.substr(pos, len);\r\n \t\t};\r\n \t\tHxOverrides.remove = function (a, obj) {\r\n \t\t\tvar i = a.indexOf(obj);\r\n \t\t\tif (i == -1) {\r\n \t\t\t\treturn false;\r\n \t\t\t}\r\n \t\t\ta.splice(i, 1);\r\n \t\t\treturn true;\r\n \t\t};\r\n \t\tHxOverrides.now = function () {\r\n \t\t\treturn Date.now();\r\n \t\t};\r\n \t\tvar Main = function () {};\r\n \t\tMain.__name__ = \"Main\";\r\n \t\tMain.main = function () {\r\n \t\t\tcc.resources.load(\"cdb/res/data\", (err, asset) => {\r\n \t\t\t\tif (err) {\r\n \t\t\t\t\tconsole.error(\"Failed to load data.cdb:\", err);\r\n \t\t\t\t\trejectCdbData();\r\n \t\t\t\t\treturn;\r\n \t\t\t\t}\r\n \t\t\t\tconst content = asset._file;\r\n \t\t\t\tData.load(content);\r\n \t\t\t\tresolveCdbData(Data);\r\n \t\t\t});\r\n \t\t};\r\n \t\tMath.__name__ = \"Math\";\r\n \t\tvar Reflect = function () {};\r\n \t\tReflect.__name__ = \"Reflect\";\r\n \t\tReflect.field = function (o, field) {\r\n \t\t\ttry {\r\n \t\t\t\treturn o[field];\r\n \t\t\t} catch (_g) {\r\n \t\t\t\treturn null;\r\n \t\t\t}\r\n \t\t};\r\n \t\tReflect.fields = function (o) {\r\n \t\t\tvar a = [];\r\n \t\t\tif (o != null) {\r\n \t\t\t\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n \t\t\t\tfor (var f in o) {\r\n \t\t\t\t\tif (f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f)) {\r\n \t\t\t\t\t\ta.push(f);\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\treturn a;\r\n \t\t};\r\n \t\tReflect.deleteField = function (o, field) {\r\n \t\t\tif (!Object.prototype.hasOwnProperty.call(o, field)) {\r\n \t\t\t\treturn false;\r\n \t\t\t}\r\n \t\t\tdelete o[field];\r\n \t\t\treturn true;\r\n \t\t};\r\n \t\tReflect.copy = function (o) {\r\n \t\t\tif (o == null) {\r\n \t\t\t\treturn null;\r\n \t\t\t}\r\n \t\t\tvar o2 = {};\r\n \t\t\tvar _g = 0;\r\n \t\t\tvar _g1 = Reflect.fields(o);\r\n \t\t\twhile (_g < _g1.length) {\r\n \t\t\t\tvar f = _g1[_g];\r\n \t\t\t\t++_g;\r\n \t\t\t\to2[f] = Reflect.field(o, f);\r\n \t\t\t}\r\n \t\t\treturn o2;\r\n \t\t};\r\n \t\tvar Std = function () {};\r\n \t\tStd.__name__ = \"Std\";\r\n \t\tStd.string = function (s) {\r\n \t\t\treturn js_Boot.__string_rec(s, \"\");\r\n \t\t};\r\n \t\tStd.parseInt = function (x) {\r\n \t\t\tvar v = parseInt(x);\r\n \t\t\tif (isNaN(v)) {\r\n \t\t\t\treturn null;\r\n \t\t\t}\r\n \t\t\treturn v;\r\n \t\t};\r\n \t\tvar StringTools = function () {};\r\n \t\tStringTools.__name__ = \"StringTools\";\r\n \t\tStringTools.htmlEscape = function (s, quotes) {\r\n \t\t\tvar buf_b = \"\";\r\n \t\t\tvar _g_offset = 0;\r\n \t\t\tvar _g_s = s;\r\n \t\t\twhile (_g_offset < _g_s.length) {\r\n \t\t\t\tvar s = _g_s;\r\n \t\t\t\tvar index = _g_offset++;\r\n \t\t\t\tvar c = s.charCodeAt(index);\r\n \t\t\t\tif (c >= 55296 && c <= 56319) {\r\n \t\t\t\t\tc = ((c - 55232) << 10) | (s.charCodeAt(index + 1) & 1023);\r\n \t\t\t\t}\r\n \t\t\t\tvar c1 = c;\r\n \t\t\t\tif (c1 >= 65536) {\r\n \t\t\t\t\t++_g_offset;\r\n \t\t\t\t}\r\n \t\t\t\tvar code = c1;\r\n \t\t\t\tswitch (code) {\r\n \t\t\t\t\tcase 34:\r\n \t\t\t\t\t\tif (quotes) {\r\n \t\t\t\t\t\t\tbuf_b += \"&quot;\";\r\n \t\t\t\t\t\t} else {\r\n \t\t\t\t\t\t\tbuf_b += String.fromCodePoint(code);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\tcase 38:\r\n \t\t\t\t\t\tbuf_b += \"&amp;\";\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\tcase 39:\r\n \t\t\t\t\t\tif (quotes) {\r\n \t\t\t\t\t\t\tbuf_b += \"&#039;\";\r\n \t\t\t\t\t\t} else {\r\n \t\t\t\t\t\t\tbuf_b += String.fromCodePoint(code);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\tcase 60:\r\n \t\t\t\t\t\tbuf_b += \"&lt;\";\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\tcase 62:\r\n \t\t\t\t\t\tbuf_b += \"&gt;\";\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\tdefault:\r\n \t\t\t\t\t\tbuf_b += String.fromCodePoint(code);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\treturn buf_b;\r\n \t\t};\r\n \t\tStringTools.htmlUnescape = function (s) {\r\n \t\t\treturn s\r\n \t\t\t\t.split(\"&gt;\")\r\n \t\t\t\t.join(\">\")\r\n \t\t\t\t.split(\"&lt;\")\r\n \t\t\t\t.join(\"<\")\r\n \t\t\t\t.split(\"&quot;\")\r\n \t\t\t\t.join('\"')\r\n \t\t\t\t.split(\"&#039;\")\r\n \t\t\t\t.join(\"'\")\r\n \t\t\t\t.split(\"&amp;\")\r\n \t\t\t\t.join(\"&\");\r\n \t\t};\r\n \t\tStringTools.startsWith = function (s, start) {\r\n \t\t\tif (s.length >= start.length) {\r\n \t\t\t\treturn s.lastIndexOf(start, 0) == 0;\r\n \t\t\t} else {\r\n \t\t\t\treturn false;\r\n \t\t\t}\r\n \t\t};\r\n \t\tStringTools.isSpace = function (s, pos) {\r\n \t\t\tvar c = HxOverrides.cca(s, pos);\r\n \t\t\tif (!(c > 8 && c < 14)) {\r\n \t\t\t\treturn c == 32;\r\n \t\t\t} else {\r\n \t\t\t\treturn true;\r\n \t\t\t}\r\n \t\t};\r\n \t\tStringTools.ltrim = function (s) {\r\n \t\t\tvar l = s.length;\r\n \t\t\tvar r = 0;\r\n \t\t\twhile (r < l && StringTools.isSpace(s, r)) ++r;\r\n \t\t\tif (r > 0) {\r\n \t\t\t\treturn HxOverrides.substr(s, r, l - r);\r\n \t\t\t} else {\r\n \t\t\t\treturn s;\r\n \t\t\t}\r\n \t\t};\r\n \t\tStringTools.rtrim = function (s) {\r\n \t\t\tvar l = s.length;\r\n \t\t\tvar r = 0;\r\n \t\t\twhile (r < l && StringTools.isSpace(s, l - r - 1)) ++r;\r\n \t\t\tif (r > 0) {\r\n \t\t\t\treturn HxOverrides.substr(s, 0, l - r);\r\n \t\t\t} else {\r\n \t\t\t\treturn s;\r\n \t\t\t}\r\n \t\t};\r\n \t\tStringTools.trim = function (s) {\r\n \t\t\treturn StringTools.ltrim(StringTools.rtrim(s));\r\n \t\t};\r\n \t\tvar Type = function () {};\r\n \t\tType.__name__ = \"Type\";\r\n \t\tType.enumParameters = function (e) {\r\n \t\t\tvar enm = $hxEnums[e.__enum__];\r\n \t\t\tvar params = enm.__constructs__[e._hx_index].__params__;\r\n \t\t\tif (params != null) {\r\n \t\t\t\tvar _g = [];\r\n \t\t\t\tvar _g1 = 0;\r\n \t\t\t\twhile (_g1 < params.length) {\r\n \t\t\t\t\tvar p = params[_g1];\r\n \t\t\t\t\t++_g1;\r\n \t\t\t\t\t_g.push(e[p]);\r\n \t\t\t\t}\r\n \t\t\t\treturn _g;\r\n \t\t\t} else {\r\n \t\t\t\treturn [];\r\n \t\t\t}\r\n \t\t};\r\n \t\tvar cdb_ColumnType = ($hxEnums[\"cdb.ColumnType\"] = {\r\n \t\t\t__ename__: true,\r\n \t\t\t__constructs__: null,\r\n \t\t\tTId: {_hx_name: \"TId\", _hx_index: 0, __enum__: \"cdb.ColumnType\", toString: $estr},\r\n \t\t\tTString: {_hx_name: \"TString\", _hx_index: 1, __enum__: \"cdb.ColumnType\", toString: $estr},\r\n \t\t\tTBool: {_hx_name: \"TBool\", _hx_index: 2, __enum__: \"cdb.ColumnType\", toString: $estr},\r\n \t\t\tTInt: {_hx_name: \"TInt\", _hx_index: 3, __enum__: \"cdb.ColumnType\", toString: $estr},\r\n \t\t\tTFloat: {_hx_name: \"TFloat\", _hx_index: 4, __enum__: \"cdb.ColumnType\", toString: $estr},\r\n \t\t\tTEnum:\r\n \t\t\t\t(($_ = function (values) {\r\n \t\t\t\t\treturn {_hx_index: 5, values: values, __enum__: \"cdb.ColumnType\", toString: $estr};\r\n \t\t\t\t}),\r\n \t\t\t\t($_._hx_name = \"TEnum\"),\r\n \t\t\t\t($_.__params__ = [\"values\"]),\r\n \t\t\t\t$_),\r\n \t\t\tTRef:\r\n \t\t\t\t(($_ = function (sheet) {\r\n \t\t\t\t\treturn {_hx_index: 6, sheet: sheet, __enum__: \"cdb.ColumnType\", toString: $estr};\r\n \t\t\t\t}),\r\n \t\t\t\t($_._hx_name = \"TRef\"),\r\n \t\t\t\t($_.__params__ = [\"sheet\"]),\r\n \t\t\t\t$_),\r\n \t\t\tTImage: {_hx_name: \"TImage\", _hx_index: 7, __enum__: \"cdb.ColumnType\", toString: $estr},\r\n \t\t\tTList: {_hx_name: \"TList\", _hx_index: 8, __enum__: \"cdb.ColumnType\", toString: $estr},\r\n \t\t\tTCustom:\r\n \t\t\t\t(($_ = function (name) {\r\n \t\t\t\t\treturn {_hx_index: 9, name: name, __enum__: \"cdb.ColumnType\", toString: $estr};\r\n \t\t\t\t}),\r\n \t\t\t\t($_._hx_name = \"TCustom\"),\r\n \t\t\t\t($_.__params__ = [\"name\"]),\r\n \t\t\t\t$_),\r\n \t\t\tTFlags:\r\n \t\t\t\t(($_ = function (values) {\r\n \t\t\t\t\treturn {_hx_index: 10, values: values, __enum__: \"cdb.ColumnType\", toString: $estr};\r\n \t\t\t\t}),\r\n \t\t\t\t($_._hx_name = \"TFlags\"),\r\n \t\t\t\t($_.__params__ = [\"values\"]),\r\n \t\t\t\t$_),\r\n \t\t\tTColor: {_hx_name: \"TColor\", _hx_index: 11, __enum__: \"cdb.ColumnType\", toString: $estr},\r\n \t\t\tTLayer:\r\n \t\t\t\t(($_ = function (type) {\r\n \t\t\t\t\treturn {_hx_index: 12, type: type, __enum__: \"cdb.ColumnType\", toString: $estr};\r\n \t\t\t\t}),\r\n \t\t\t\t($_._hx_name = \"TLayer\"),\r\n \t\t\t\t($_.__params__ = [\"type\"]),\r\n \t\t\t\t$_),\r\n \t\t\tTFile: {_hx_name: \"TFile\", _hx_index: 13, __enum__: \"cdb.ColumnType\", toString: $estr},\r\n \t\t\tTTilePos: {_hx_name: \"TTilePos\", _hx_index: 14, __enum__: \"cdb.ColumnType\", toString: $estr},\r\n \t\t\tTTileLayer: {_hx_name: \"TTileLayer\", _hx_index: 15, __enum__: \"cdb.ColumnType\", toString: $estr},\r\n \t\t\tTDynamic: {_hx_name: \"TDynamic\", _hx_index: 16, __enum__: \"cdb.ColumnType\", toString: $estr},\r\n \t\t\tTProperties: {_hx_name: \"TProperties\", _hx_index: 17, __enum__: \"cdb.ColumnType\", toString: $estr},\r\n \t\t\tTGradient: {_hx_name: \"TGradient\", _hx_index: 18, __enum__: \"cdb.ColumnType\", toString: $estr},\r\n \t\t\tTCurve: {_hx_name: \"TCurve\", _hx_index: 19, __enum__: \"cdb.ColumnType\", toString: $estr},\r\n \t\t\tTGuid: {_hx_name: \"TGuid\", _hx_index: 20, __enum__: \"cdb.ColumnType\", toString: $estr},\r\n \t\t});\r\n \t\tcdb_ColumnType.__constructs__ = [\r\n \t\t\tcdb_ColumnType.TId,\r\n \t\t\tcdb_ColumnType.TString,\r\n \t\t\tcdb_ColumnType.TBool,\r\n \t\t\tcdb_ColumnType.TInt,\r\n \t\t\tcdb_ColumnType.TFloat,\r\n \t\t\tcdb_ColumnType.TEnum,\r\n \t\t\tcdb_ColumnType.TRef,\r\n \t\t\tcdb_ColumnType.TImage,\r\n \t\t\tcdb_ColumnType.TList,\r\n \t\t\tcdb_ColumnType.TCustom,\r\n \t\t\tcdb_ColumnType.TFlags,\r\n \t\t\tcdb_ColumnType.TColor,\r\n \t\t\tcdb_ColumnType.TLayer,\r\n \t\t\tcdb_ColumnType.TFile,\r\n \t\t\tcdb_ColumnType.TTilePos,\r\n \t\t\tcdb_ColumnType.TTileLayer,\r\n \t\t\tcdb_ColumnType.TDynamic,\r\n \t\t\tcdb_ColumnType.TProperties,\r\n \t\t\tcdb_ColumnType.TGradient,\r\n \t\t\tcdb_ColumnType.TCurve,\r\n \t\t\tcdb_ColumnType.TGuid,\r\n \t\t];\r\n \t\tvar cdb_TileMode = {};\r\n \t\tcdb_TileMode._new = function (s) {\r\n \t\t\treturn s;\r\n \t\t};\r\n \t\tcdb_TileMode.ofString = function (s) {\r\n \t\t\treturn cdb_TileMode._new(s);\r\n \t\t};\r\n \t\tcdb_TileMode.toString = function (this1) {\r\n \t\t\treturn this1;\r\n \t\t};\r\n \t\tvar cdb_LocField = ($hxEnums[\"cdb.LocField\"] = {\r\n \t\t\t__ename__: true,\r\n \t\t\t__constructs__: null,\r\n \t\t\tLName:\r\n \t\t\t\t(($_ = function (c) {\r\n \t\t\t\t\treturn {_hx_index: 0, c: c, __enum__: \"cdb.LocField\", toString: $estr};\r\n \t\t\t\t}),\r\n \t\t\t\t($_._hx_name = \"LName\"),\r\n \t\t\t\t($_.__params__ = [\"c\"]),\r\n \t\t\t\t$_),\r\n \t\t\tLSub:\r\n \t\t\t\t(($_ = function (c, s, e) {\r\n \t\t\t\t\treturn {_hx_index: 1, c: c, s: s, e: e, __enum__: \"cdb.LocField\", toString: $estr};\r\n \t\t\t\t}),\r\n \t\t\t\t($_._hx_name = \"LSub\"),\r\n \t\t\t\t($_.__params__ = [\"c\", \"s\", \"e\"]),\r\n \t\t\t\t$_),\r\n \t\t\tLSingle:\r\n \t\t\t\t(($_ = function (c, e) {\r\n \t\t\t\t\treturn {_hx_index: 2, c: c, e: e, __enum__: \"cdb.LocField\", toString: $estr};\r\n \t\t\t\t}),\r\n \t\t\t\t($_._hx_name = \"LSingle\"),\r\n \t\t\t\t($_.__params__ = [\"c\", \"e\"]),\r\n \t\t\t\t$_),\r\n \t\t});\r\n \t\tcdb_LocField.__constructs__ = [cdb_LocField.LName, cdb_LocField.LSub, cdb_LocField.LSingle];\r\n \t\tvar cdb_Ref = function (e) {\r\n \t\t\tthis.e = e;\r\n \t\t};\r\n \t\tcdb_Ref.__name__ = \"cdb.Ref\";\r\n \t\tcdb_Ref.prototype = {\r\n \t\t\t__class__: cdb_Ref,\r\n \t\t};\r\n \t\tvar cdb_Lang = function (root) {\r\n \t\t\tthis.root = root;\r\n \t\t\tthis.dataSheets = new haxe_ds_StringMap();\r\n \t\t};\r\n \t\tcdb_Lang.__name__ = \"cdb.Lang\";\r\n \t\tcdb_Lang.toLangXml = function (xml) {\r\n \t\t\tvar l = new cdb_LangXml();\r\n \t\t\tif (xml.nodeType != Xml.Element) {\r\n \t\t\t\tthrow haxe_Exception.thrown(\r\n \t\t\t\t\t\"Bad node type, expected Element but found \" +\r\n \t\t\t\t\t\t(xml.nodeType == null ? \"null\" : XmlType.toString(xml.nodeType))\r\n \t\t\t\t);\r\n \t\t\t}\r\n \t\t\tvar name = xml.nodeName;\r\n \t\t\tl.nodeName = cdb_Lang.NODES.h[name];\r\n \t\t\tif (l.nodeName == null) {\r\n \t\t\t\tl.nodeName = name;\r\n \t\t\t\tcdb_Lang.NODES.h[name] = name;\r\n \t\t\t}\r\n \t\t\tvar hasText = false;\r\n \t\t\tif (xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {\r\n \t\t\t\tthrow haxe_Exception.thrown(\r\n \t\t\t\t\t\"Bad node type, expected Element or Document but found \" +\r\n \t\t\t\t\t\t(xml.nodeType == null ? \"null\" : XmlType.toString(xml.nodeType))\r\n \t\t\t\t);\r\n \t\t\t}\r\n \t\t\tvar _g_current = 0;\r\n \t\t\tvar _g_array = xml.children;\r\n \t\t\twhile (_g_current < _g_array.length) {\r\n \t\t\t\tvar e = _g_array[_g_current++];\r\n \t\t\t\tvar tmp;\r\n \t\t\t\tif (e.nodeType == 1) {\r\n \t\t\t\t\tvar tmp1 = cdb_Lang.r_spaces;\r\n \t\t\t\t\tif (e.nodeType == Xml.Document || e.nodeType == Xml.Element) {\r\n \t\t\t\t\t\tthrow haxe_Exception.thrown(\r\n \t\t\t\t\t\t\t\"Bad node type, unexpected \" + (e.nodeType == null ? \"null\" : XmlType.toString(e.nodeType))\r\n \t\t\t\t\t\t);\r\n \t\t\t\t\t}\r\n \t\t\t\t\ttmp = !tmp1.match(e.nodeValue);\r\n \t\t\t\t} else {\r\n \t\t\t\t\ttmp = false;\r\n \t\t\t\t}\r\n \t\t\t\tif (tmp) {\r\n \t\t\t\t\thasText = true;\r\n \t\t\t\t\tbreak;\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tif (hasText) {\r\n \t\t\t\tif (xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {\r\n \t\t\t\t\tthrow haxe_Exception.thrown(\r\n \t\t\t\t\t\t\"Invalid nodeType \" + (xml.nodeType == null ? \"null\" : XmlType.toString(xml.nodeType))\r\n \t\t\t\t\t);\r\n \t\t\t\t}\r\n \t\t\t\tvar html = haxe_xml_Access.get_innerHTML(xml);\r\n \t\t\t\tvar _this_r = new RegExp(\"<br/>\", \"gi\".split(\"u\").join(\"\"));\r\n \t\t\t\thtml = html.replace(_this_r, \"\\n\");\r\n \t\t\t\tl._html = StringTools.htmlUnescape(html);\r\n \t\t\t} else {\r\n \t\t\t\tl._elements = [];\r\n \t\t\t\tvar e = xml.elements();\r\n \t\t\t\twhile (e.hasNext()) {\r\n \t\t\t\t\tvar e1 = e.next();\r\n \t\t\t\t\tl._elements.push(cdb_Lang.toLangXml(e1));\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\treturn l;\r\n \t\t};\r\n \t\tcdb_Lang.getObjParent = function (obj, data) {\r\n \t\t\treturn null;\r\n \t\t};\r\n \t\tcdb_Lang.prototype = {\r\n \t\t\tonMissing: function (s) {\r\n \t\t\t\tconsole.log(\"cdb/Lang.hx:49:\", s);\r\n \t\t\t},\r\n \t\t\tgetSub: function (s, c) {\r\n \t\t\t\treturn this.getSheet(s.name + \"@\" + c.name);\r\n \t\t\t},\r\n \t\t\tgetSheet: function (name) {\r\n \t\t\t\tvar _g = 0;\r\n \t\t\t\tvar _g1 = this.root.sheets;\r\n \t\t\t\twhile (_g < _g1.length) {\r\n \t\t\t\t\tvar s = _g1[_g];\r\n \t\t\t\t\t++_g;\r\n \t\t\t\t\tif (s.name == name) {\r\n \t\t\t\t\t\treturn s;\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t\treturn null;\r\n \t\t\t},\r\n \t\t\tmakeLocField: function (c, s) {\r\n \t\t\t\tswitch (c.type._hx_index) {\r\n \t\t\t\t\tcase 1:\r\n \t\t\t\t\t\tif (c.kind == \"localizable\") {\r\n \t\t\t\t\t\t\treturn cdb_LocField.LName(c);\r\n \t\t\t\t\t\t} else {\r\n \t\t\t\t\t\t\treturn null;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\tcase 8:\r\n \t\t\t\t\tcase 17:\r\n \t\t\t\t\t\tvar ssub = this.getSub(s, c);\r\n \t\t\t\t\t\tvar fl = this.makeSheetFields(ssub);\r\n \t\t\t\t\t\tif (fl.length == 0) {\r\n \t\t\t\t\t\t\treturn null;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\treturn cdb_LocField.LSub(c, ssub, fl);\r\n \t\t\t\t\tdefault:\r\n \t\t\t\t\t\treturn null;\r\n \t\t\t\t}\r\n \t\t\t},\r\n \t\t\tmakeSheetFields: function (s) {\r\n \t\t\t\tvar fields = [];\r\n \t\t\t\tvar _g = 0;\r\n \t\t\t\tvar _g1 = s.columns;\r\n \t\t\t\twhile (_g < _g1.length) {\r\n \t\t\t\t\tvar c = _g1[_g];\r\n \t\t\t\t\t++_g;\r\n \t\t\t\t\tvar f = this.makeLocField(c, s);\r\n \t\t\t\t\tif (f != null) {\r\n \t\t\t\t\t\tif (f._hx_index == 1) {\r\n \t\t\t\t\t\t\tvar _g2 = f.s;\r\n \t\t\t\t\t\t\tvar c1 = f.c;\r\n \t\t\t\t\t\t\tvar fl = f.e;\r\n \t\t\t\t\t\t\tif (c1.type == cdb_ColumnType.TProperties) {\r\n \t\t\t\t\t\t\t\tvar _g3 = 0;\r\n \t\t\t\t\t\t\t\twhile (_g3 < fl.length) {\r\n \t\t\t\t\t\t\t\t\tvar f1 = fl[_g3];\r\n \t\t\t\t\t\t\t\t\t++_g3;\r\n \t\t\t\t\t\t\t\t\tfields.push(cdb_LocField.LSingle(c1, f1));\r\n \t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t} else {\r\n \t\t\t\t\t\t\t\tfields.push(f);\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t} else {\r\n \t\t\t\t\t\t\tfields.push(f);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t\treturn fields;\r\n \t\t\t},\r\n \t\t\tapply: function (xml, reference) {\r\n \t\t\t\tvar x = Xml.parse(xml).firstElement();\r\n \t\t\t\tvar ref = reference == null ? null : Xml.parse(reference).firstElement();\r\n \t\t\t\tvar xsheets_h = Object.create(null);\r\n \t\t\t\tcdb_Lang.NODES = new haxe_ds_StringMap();\r\n \t\t\t\tvar e = x.elements();\r\n \t\t\t\twhile (e.hasNext()) {\r\n \t\t\t\t\tvar e1 = e.next();\r\n \t\t\t\t\txsheets_h[e1.get(\"name\")] = new cdb_Ref(cdb_Lang.toLangXml(e1));\r\n \t\t\t\t}\r\n \t\t\t\tif (ref != null) {\r\n \t\t\t\t\tvar e = ref.elements();\r\n \t\t\t\t\twhile (e.hasNext()) {\r\n \t\t\t\t\t\tvar e1 = e.next();\r\n \t\t\t\t\t\tvar s = xsheets_h[e1.get(\"name\")];\r\n \t\t\t\t\t\tif (s != null) {\r\n \t\t\t\t\t\t\ts.ref = cdb_Lang.toLangXml(e1);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t\tcdb_Lang.NODES = null;\r\n \t\t\t\tvar out = new haxe_ds_StringMap();\r\n \t\t\t\tvar _g = 0;\r\n \t\t\t\tvar _g1 = this.root.sheets;\r\n \t\t\t\twhile (_g < _g1.length) {\r\n \t\t\t\t\tvar s = _g1[_g];\r\n \t\t\t\t\t++_g;\r\n \t\t\t\t\tif (s.props.hide) {\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tvar x = xsheets_h[s.name];\r\n \t\t\t\t\tif (s.props.dataFiles != null) {\r\n \t\t\t\t\t\tvar fields = this.makeSheetFields(s);\r\n \t\t\t\t\t\tif (fields.length > 0) {\r\n \t\t\t\t\t\t\tvar idField = null;\r\n \t\t\t\t\t\t\tvar _g2 = 0;\r\n \t\t\t\t\t\t\tvar _g3 = s.columns;\r\n \t\t\t\t\t\t\twhile (_g2 < _g3.length) {\r\n \t\t\t\t\t\t\t\tvar c = _g3[_g2];\r\n \t\t\t\t\t\t\t\t++_g2;\r\n \t\t\t\t\t\t\t\tif (c.type == cdb_ColumnType.TId) {\r\n \t\t\t\t\t\t\t\t\tidField = c.name;\r\n \t\t\t\t\t\t\t\t\tbreak;\r\n \t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\tif (idField == null) {\r\n \t\t\t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\tif (x == null) {\r\n \t\t\t\t\t\t\t\tthis.onMissing(\"Missing sheet \" + s.name);\r\n \t\t\t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\tvar this1 = this.dataSheets;\r\n \t\t\t\t\t\t\tvar key = s.name;\r\n \t\t\t\t\t\t\tvar value = {sheet: s, idField: idField, fields: fields, refs: this.makeIdMap(x)};\r\n \t\t\t\t\t\t\tthis1.h[key] = value;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tif (x == null) {\r\n \t\t\t\t\t\tif (s.lines.length > 0 && this.makeSheetFields(s).length > 0) {\r\n \t\t\t\t\t\t\tthis.onMissing(\"Missing sheet \" + s.name);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tvar path = [s.name];\r\n \t\t\t\t\tvar outLines = [];\r\n \t\t\t\t\tthis.applySheet(path, s, this.makeSheetFields(s), s.lines, x, outLines);\r\n \t\t\t\t\tif (Object.prototype.hasOwnProperty.call(out.h, s.name)) {\r\n \t\t\t\t\t\tthrow haxe_Exception.thrown(\"assert\");\r\n \t\t\t\t\t}\r\n \t\t\t\t\tout.h[s.name] = outLines;\r\n \t\t\t\t}\r\n \t\t\t\treturn out;\r\n \t\t\t},\r\n \t\t\tdelete: function (l) {\r\n \t\t\t\tvar _g = 0;\r\n \t\t\t\tvar _g1 = this.root.sheets;\r\n \t\t\t\twhile (_g < _g1.length) {\r\n \t\t\t\t\tvar s = _g1[_g];\r\n \t\t\t\t\t++_g;\r\n \t\t\t\t\tvar sdel = l.h[s.name];\r\n \t\t\t\t\tif (sdel == null) {\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tthis.deleteSheet(s, this.makeSheetFields(s), sdel, s.lines);\r\n \t\t\t\t}\r\n \t\t\t},\r\n \t\t\tdeleteSheet: function (s, loc, del, lines) {\r\n \t\t\t\tvar inf = this.getSheetHelpers(s);\r\n \t\t\t\tif (inf.id == null) {\r\n \t\t\t\t\tvar _g = 0;\r\n \t\t\t\t\tvar _g1 = lines.length;\r\n \t\t\t\t\twhile (_g < _g1) {\r\n \t\t\t\t\t\tvar i = _g++;\r\n \t\t\t\t\t\tif (del[i] != null && lines[i] != null) {\r\n \t\t\t\t\t\t\tthis.deleteObj(loc, del[i], lines[i]);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t} else {\r\n \t\t\t\t\tvar byID_h = Object.create(null);\r\n \t\t\t\t\tvar _g = 0;\r\n \t\t\t\t\twhile (_g < del.length) {\r\n \t\t\t\t\t\tvar d = del[_g];\r\n \t\t\t\t\t\t++_g;\r\n \t\t\t\t\t\tbyID_h[Reflect.field(d, inf.id)] = d;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tvar _g = 0;\r\n \t\t\t\t\twhile (_g < lines.length) {\r\n \t\t\t\t\t\tvar o = lines[_g];\r\n \t\t\t\t\t\t++_g;\r\n \t\t\t\t\t\tvar id = Reflect.field(o, inf.id);\r\n \t\t\t\t\t\tif (id == null || !Object.prototype.hasOwnProperty.call(byID_h, id)) {\r\n \t\t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tthis.deleteObj(loc, byID_h[id], o);\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t},\r\n \t\t\tdeleteObj: function (loc, del, obj) {\r\n \t\t\t\tvar _g = 0;\r\n \t\t\t\twhile (_g < loc.length) {\r\n \t\t\t\t\tvar l = loc[_g];\r\n \t\t\t\t\t++_g;\r\n \t\t\t\t\tswitch (l._hx_index) {\r\n \t\t\t\t\t\tcase 0:\r\n \t\t\t\t\t\t\tvar c = l.c;\r\n \t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(del, c.name)) {\r\n \t\t\t\t\t\t\t\tobj[c.name] = \"\";\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\tbreak;\r\n \t\t\t\t\t\tcase 1:\r\n \t\t\t\t\t\t\tvar c1 = l.c;\r\n \t\t\t\t\t\t\tvar s = l.s;\r\n \t\t\t\t\t\t\tvar el = l.e;\r\n \t\t\t\t\t\t\tvar ol = Reflect.field(obj, c1.name);\r\n \t\t\t\t\t\t\tvar dl = Reflect.field(del, c1.name);\r\n \t\t\t\t\t\t\tif (ol == null || dl == null) {\r\n \t\t\t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\tthis.deleteSheet(s, el, dl, ol);\r\n \t\t\t\t\t\t\tbreak;\r\n \t\t\t\t\t\tcase 2:\r\n \t\t\t\t\t\t\tvar c2 = l.c;\r\n \t\t\t\t\t\t\tvar e = l.e;\r\n \t\t\t\t\t\t\tvar o = Reflect.field(obj, c2.name);\r\n \t\t\t\t\t\t\tvar d = Reflect.field(del, c2.name);\r\n \t\t\t\t\t\t\tif (o == null || d == null) {\r\n \t\t\t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\tthis.deleteObj([e], d, o);\r\n \t\t\t\t\t\t\tbreak;\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t},\r\n \t\t\tapplySheet: function (path, s, fields, objects, x, out) {\r\n \t\t\t\tvar inf = this.getSheetHelpers(s);\r\n \t\t\t\tif (inf.id == null) {\r\n \t\t\t\t\tvar byIndex = [];\r\n \t\t\t\t\tif (x != null) {\r\n \t\t\t\t\t\tvar _g = 0;\r\n \t\t\t\t\t\tvar _g1 = x.e._elements;\r\n \t\t\t\t\t\twhile (_g < _g1.length) {\r\n \t\t\t\t\t\t\tvar e = _g1[_g];\r\n \t\t\t\t\t\t\t++_g;\r\n \t\t\t\t\t\t\tvar m = new haxe_ds_StringMap();\r\n \t\t\t\t\t\t\tvar _g2 = 0;\r\n \t\t\t\t\t\t\tvar _g3 = e._elements;\r\n \t\t\t\t\t\t\twhile (_g2 < _g3.length) {\r\n \t\t\t\t\t\t\t\tvar e1 = _g3[_g2];\r\n \t\t\t\t\t\t\t\t++_g2;\r\n \t\t\t\t\t\t\t\tvar key = e1.nodeName;\r\n \t\t\t\t\t\t\t\tvar value = new cdb_Ref(e1);\r\n \t\t\t\t\t\t\t\tm.h[key] = value;\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\tvar name = e.nodeName;\r\n \t\t\t\t\t\t\tif (StringTools.startsWith(name, \"line\")) {\r\n \t\t\t\t\t\t\t\tname = HxOverrides.substr(name, 4, null);\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\tbyIndex[Std.parseInt(name)] = m;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tif (x.ref != null) {\r\n \t\t\t\t\t\t\tvar _g = 0;\r\n \t\t\t\t\t\t\tvar _g1 = x.ref._elements;\r\n \t\t\t\t\t\t\twhile (_g < _g1.length) {\r\n \t\t\t\t\t\t\t\tvar e = _g1[_g];\r\n \t\t\t\t\t\t\t\t++_g;\r\n \t\t\t\t\t\t\t\tvar name = e.nodeName;\r\n \t\t\t\t\t\t\t\tif (StringTools.startsWith(name, \"line\")) {\r\n \t\t\t\t\t\t\t\t\tname = HxOverrides.substr(name, 4, null);\r\n \t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\tvar m = byIndex[Std.parseInt(name)];\r\n \t\t\t\t\t\t\t\tif (m != null) {\r\n \t\t\t\t\t\t\t\t\tvar _g2 = 0;\r\n \t\t\t\t\t\t\t\t\tvar _g3 = e._elements;\r\n \t\t\t\t\t\t\t\t\twhile (_g2 < _g3.length) {\r\n \t\t\t\t\t\t\t\t\t\tvar e1 = _g3[_g2];\r\n \t\t\t\t\t\t\t\t\t\t++_g2;\r\n \t\t\t\t\t\t\t\t\t\tvar r = m.h[e1.nodeName];\r\n \t\t\t\t\t\t\t\t\t\tif (r != null) {\r\n \t\t\t\t\t\t\t\t\t\t\tr.ref = e1;\r\n \t\t\t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t\tvar _g = 0;\r\n \t\t\t\t\tvar _g1 = objects.length;\r\n \t\t\t\t\twhile (_g < _g1) {\r\n \t\t\t\t\t\tvar i = _g++;\r\n \t\t\t\t\t\tvar outSub = {};\r\n \t\t\t\t\t\tvar o = objects[i];\r\n \t\t\t\t\t\tvar _g2 = 0;\r\n \t\t\t\t\t\twhile (_g2 < fields.length) {\r\n \t\t\t\t\t\t\tvar f = fields[_g2];\r\n \t\t\t\t\t\t\t++_g2;\r\n \t\t\t\t\t\t\tpath.push(\"[\" + i + \"]\");\r\n \t\t\t\t\t\t\tthis.applyRec(path, f, o, byIndex[i], outSub);\r\n \t\t\t\t\t\t\tpath.pop();\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tif (Reflect.fields(outSub).length > 0) {\r\n \t\t\t\t\t\t\tvar _g3 = 0;\r\n \t\t\t\t\t\t\tvar _g4 = inf.helpers;\r\n \t\t\t\t\t\t\twhile (_g3 < _g4.length) {\r\n \t\t\t\t\t\t\t\tvar c = _g4[_g3];\r\n \t\t\t\t\t\t\t\t++_g3;\r\n \t\t\t\t\t\t\t\tvar hid = Reflect.field(o, c.name);\r\n \t\t\t\t\t\t\t\tif (hid != null) {\r\n \t\t\t\t\t\t\t\t\toutSub[c.name] = hid;\r\n \t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\tout[i] = outSub;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t} else {\r\n \t\t\t\t\tvar byID = this.makeIdMap(x);\r\n \t\t\t\t\tvar _g = 0;\r\n \t\t\t\t\twhile (_g < objects.length) {\r\n \t\t\t\t\t\tvar o = objects[_g];\r\n \t\t\t\t\t\t++_g;\r\n \t\t\t\t\t\tvar outSub = {};\r\n \t\t\t\t\t\tvar id = Reflect.field(o, inf.id);\r\n \t\t\t\t\t\tif (id == null) {\r\n \t\t\t\t\t\t\tid = \"null\";\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tpath.push(id);\r\n \t\t\t\t\t\tvar _g1 = 0;\r\n \t\t\t\t\t\twhile (_g1 < fields.length) {\r\n \t\t\t\t\t\t\tvar f = fields[_g1];\r\n \t\t\t\t\t\t\t++_g1;\r\n \t\t\t\t\t\t\tthis.applyRec(path, f, o, byID.h[id], outSub);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tpath.pop();\r\n \t\t\t\t\t\tif (Reflect.fields(outSub).length > 0) {\r\n \t\t\t\t\t\t\toutSub[inf.id] = id;\r\n \t\t\t\t\t\t\tout.push(outSub);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t},\r\n \t\t\tmakeIdMap: function (x) {\r\n \t\t\t\tvar byID = new haxe_ds_StringMap();\r\n \t\t\t\tif (x == null) {\r\n \t\t\t\t\treturn byID;\r\n \t\t\t\t}\r\n \t\t\t\tvar _g = 0;\r\n \t\t\t\tvar _g1 = x.e._elements;\r\n \t\t\t\twhile (_g < _g1.length) {\r\n \t\t\t\t\tvar e = _g1[_g];\r\n \t\t\t\t\t++_g;\r\n \t\t\t\t\tvar m = new haxe_ds_StringMap();\r\n \t\t\t\t\tvar _g2 = 0;\r\n \t\t\t\t\tvar _g3 = e._elements;\r\n \t\t\t\t\twhile (_g2 < _g3.length) {\r\n \t\t\t\t\t\tvar e1 = _g3[_g2];\r\n \t\t\t\t\t\t++_g2;\r\n \t\t\t\t\t\tvar key = e1.nodeName;\r\n \t\t\t\t\t\tvar value = new cdb_Ref(e1);\r\n \t\t\t\t\t\tm.h[key] = value;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tbyID.h[e.nodeName] = m;\r\n \t\t\t\t}\r\n \t\t\t\tif (x.ref != null) {\r\n \t\t\t\t\tvar _g = 0;\r\n \t\t\t\t\tvar _g1 = x.ref._elements;\r\n \t\t\t\t\twhile (_g < _g1.length) {\r\n \t\t\t\t\t\tvar e = _g1[_g];\r\n \t\t\t\t\t\t++_g;\r\n \t\t\t\t\t\tvar m = byID.h[e.nodeName];\r\n \t\t\t\t\t\tif (m != null) {\r\n \t\t\t\t\t\t\tvar _g2 = 0;\r\n \t\t\t\t\t\t\tvar _g3 = e._elements;\r\n \t\t\t\t\t\t\twhile (_g2 < _g3.length) {\r\n \t\t\t\t\t\t\t\tvar e1 = _g3[_g2];\r\n \t\t\t\t\t\t\t\t++_g2;\r\n \t\t\t\t\t\t\t\tvar r = m.h[e1.nodeName];\r\n \t\t\t\t\t\t\t\tif (r != null) {\r\n \t\t\t\t\t\t\t\t\tr.ref = e1;\r\n \t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t\treturn byID;\r\n \t\t\t},\r\n \t\t\tapplyRec: function (path, f, o, data, out) {\r\n \t\t\t\tvar prevMissing = this.skipMissing;\r\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(o, cdb_Lang.IGNORE_EXPORT_FIELD)) {\r\n \t\t\t\t\tthis.skipMissing = true;\r\n \t\t\t\t}\r\n \t\t\t\tthis._applyRec(path, f, o, data, out);\r\n \t\t\t\tthis.skipMissing = prevMissing;\r\n \t\t\t},\r\n \t\t\t_applyRec: function (path, f, o, data, out) {\r\n \t\t\t\tswitch (f._hx_index) {\r\n \t\t\t\t\tcase 0:\r\n \t\t\t\t\t\tvar c = f.c;\r\n \t\t\t\t\t\tvar v = data == null ? null : data.h[c.name];\r\n \t\t\t\t\t\tif (v != null) {\r\n \t\t\t\t\t\t\tvar _this = v.e;\r\n \t\t\t\t\t\t\tif (_this._html == null) {\r\n \t\t\t\t\t\t\t\tthrow haxe_Exception.thrown(\"assert\");\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\tvar str = _this._html;\r\n \t\t\t\t\t\t\tvar ref;\r\n \t\t\t\t\t\t\tif (v.ref == null) {\r\n \t\t\t\t\t\t\t\tref = null;\r\n \t\t\t\t\t\t\t} else {\r\n \t\t\t\t\t\t\t\tvar _this = v.ref;\r\n \t\t\t\t\t\t\t\tif (_this._html == null) {\r\n \t\t\t\t\t\t\t\t\tthrow haxe_Exception.thrown(\"assert\");\r\n \t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\tref = _this._html;\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\tvar oname = Reflect.field(o, c.name);\r\n \t\t\t\t\t\t\tif (ref != null && (oname == null || StringTools.trim(ref) != StringTools.trim(oname))) {\r\n \t\t\t\t\t\t\t\tpath.push(c.name);\r\n \t\t\t\t\t\t\t\tthis.onMissing(\"Ignored since has changed \" + path.join(\".\"));\r\n \t\t\t\t\t\t\t\tpath.pop();\r\n \t\t\t\t\t\t\t} else {\r\n \t\t\t\t\t\t\t\to[c.name] = str;\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t} else {\r\n \t\t\t\t\t\t\tvar v = Reflect.field(o, c.name);\r\n \t\t\t\t\t\t\tif (v != null && v != \"\") {\r\n \t\t\t\t\t\t\t\tif (!this.skipMissing) {\r\n \t\t\t\t\t\t\t\t\tpath.push(c.name);\r\n \t\t\t\t\t\t\t\t\tout[c.name] = v;\r\n \t\t\t\t\t\t\t\t\tthis.onMissing(\"Missing \" + path.join(\".\"));\r\n \t\t\t\t\t\t\t\t\tpath.pop();\r\n \t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\tif (this.missingSetLocKey) {\r\n \t\t\t\t\t\t\t\t\tpath.push(c.name);\r\n \t\t\t\t\t\t\t\t\to[c.name] = \"#\" + path.join(\".\");\r\n \t\t\t\t\t\t\t\t\tpath.pop();\r\n \t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\tcase 1:\r\n \t\t\t\t\t\tvar c = f.c;\r\n \t\t\t\t\t\tvar s = f.s;\r\n \t\t\t\t\t\tvar fl = f.e;\r\n \t\t\t\t\t\tvar v = Reflect.field(o, c.name);\r\n \t\t\t\t\t\tif (v == null) {\r\n \t\t\t\t\t\t\treturn;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tpath.push(c.name);\r\n \t\t\t\t\t\tvar outSub = [];\r\n \t\t\t\t\t\tthis.applySheet(path, s, fl, v, data == null ? null : data.h[c.name], outSub);\r\n \t\t\t\t\t\tif (outSub.length > 0) {\r\n \t\t\t\t\t\t\tout[c.name] = outSub;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tpath.pop();\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\tcase 2:\r\n \t\t\t\t\t\tvar c = f.c;\r\n \t\t\t\t\t\tvar f1 = f.e;\r\n \t\t\t\t\t\tvar v = Reflect.field(o, c.name);\r\n \t\t\t\t\t\tif (v == null) {\r\n \t\t\t\t\t\t\treturn;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tpath.push(c.name);\r\n \t\t\t\t\t\tvar outSub = {};\r\n \t\t\t\t\t\tvar tmp;\r\n \t\t\t\t\t\tif (data == null) {\r\n \t\t\t\t\t\t\ttmp = null;\r\n \t\t\t\t\t\t} else {\r\n \t\t\t\t\t\t\tvar _g = new haxe_ds_StringMap();\r\n \t\t\t\t\t\t\tvar h = data.h;\r\n \t\t\t\t\t\t\tvar e_h = h;\r\n \t\t\t\t\t\t\tvar e_keys = Object.keys(h);\r\n \t\t\t\t\t\t\tvar e_length = e_keys.length;\r\n \t\t\t\t\t\t\tvar e_current = 0;\r\n \t\t\t\t\t\t\twhile (e_current < e_length) {\r\n \t\t\t\t\t\t\t\tvar e = e_keys[e_current++];\r\n \t\t\t\t\t\t\t\tif (StringTools.startsWith(e, c.name + \".\")) {\r\n \t\t\t\t\t\t\t\t\t_g.h[HxOverrides.substr(e, c.name.length + 1, null)] = data.h[e];\r\n \t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\ttmp = _g;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tthis.applyRec(path, f1, v, tmp, outSub);\r\n \t\t\t\t\t\tpath.pop();\r\n \t\t\t\t\t\tif (Reflect.fields(outSub).length > 0) {\r\n \t\t\t\t\t\t\tout[c.name] = outSub;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t}\r\n \t\t\t},\r\n \t\t\tbuildXML: function (diff) {\r\n \t\t\t\tvar buf_b = \"\";\r\n \t\t\t\tbuf_b += \"<cdb>\\n\";\r\n \t\t\t\tvar _g = 0;\r\n \t\t\t\tvar _g1 = this.root.sheets;\r\n \t\t\t\twhile (_g < _g1.length) {\r\n \t\t\t\t\tvar s = _g1[_g];\r\n \t\t\t\t\t++_g;\r\n \t\t\t\t\tif (s.props.hide) {\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tvar locFields = this.makeSheetFields(s);\r\n \t\t\t\t\tif (locFields.length == 0) {\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tvar lines = this.getLines(s, diff);\r\n \t\t\t\t\tif (lines.length == 0) {\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tbuf_b += Std.string('\\t<sheet name=\"' + s.name + '\">\\n');\r\n \t\t\t\t\tbuf_b += Std.string(this.buildSheetXml(s, \"\\t\\t\", lines, s.linesData, locFields, diff));\r\n \t\t\t\t\tbuf_b += \"\\t</sheet>\\n\";\r\n \t\t\t\t}\r\n \t\t\t\tbuf_b += \"</cdb>\\n\";\r\n \t\t\t\treturn buf_b;\r\n \t\t\t},\r\n \t\t\tgetLines: function (s, diff) {\r\n \t\t\t\tif (diff != null) {\r\n \t\t\t\t\tvar m = diff.h[s.name];\r\n \t\t\t\t\tif (m == null) {\r\n \t\t\t\t\t\tthrow haxe_Exception.thrown(\"Missing diff for \" + s.name);\r\n \t\t\t\t\t}\r\n \t\t\t\t\treturn m;\r\n \t\t\t\t}\r\n \t\t\t\treturn s.lines;\r\n \t\t\t},\r\n \t\t\tgetLocText: function (tabs, o, f, diff) {\r\n \t\t\t\tswitch (f._hx_index) {\r\n \t\t\t\t\tcase 0:\r\n \t\t\t\t\t\tvar c = f.c;\r\n \t\t\t\t\t\tvar v = Reflect.field(o, c.name);\r\n \t\t\t\t\t\tif (v != null) {\r\n \t\t\t\t\t\t\tv = StringTools.htmlEscape(v).split(\"\\n\").join(\"<br/>\").split(\"\\r\").join(\"\");\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\treturn {name: c.name, value: v};\r\n \t\t\t\t\tcase 1:\r\n \t\t\t\t\t\tvar c = f.c;\r\n \t\t\t\t\t\tvar ssub = f.s;\r\n \t\t\t\t\t\tvar fl = f.e;\r\n \t\t\t\t\t\tvar v = Reflect.field(o, c.name);\r\n \t\t\t\t\t\tvar content = this.buildSheetXml(ssub, tabs + \"\\t\\t\", v == null ? [] : v, null, fl, diff);\r\n \t\t\t\t\t\treturn {name: c.name, value: content};\r\n \t\t\t\t\tcase 2:\r\n \t\t\t\t\t\tvar c = f.c;\r\n \t\t\t\t\t\tvar f1 = f.e;\r\n \t\t\t\t\t\tvar v = this.getLocText(tabs, Reflect.field(o, c.name), f1, diff);\r\n \t\t\t\t\t\treturn {name: c.name + \".\" + v.name, value: v.value};\r\n \t\t\t\t}\r\n \t\t\t},\r\n \t\t\tgetSheetHelpers: function (s) {\r\n \t\t\t\tvar id = null;\r\n \t\t\t\tvar helpers = [];\r\n \t\t\t\tvar _g = 0;\r\n \t\t\t\tvar _g1 = s.columns;\r\n \t\t\t\twhile (_g < _g1.length) {\r\n \t\t\t\t\tvar c = _g1[_g];\r\n \t\t\t\t\t++_g;\r\n \t\t\t\t\tvar _g2 = c.type;\r\n \t\t\t\t\tswitch (_g2._hx_index) {\r\n \t\t\t\t\t\tcase 0:\r\n \t\t\t\t\t\t\tif (id == null) {\r\n \t\t\t\t\t\t\t\tid = c;\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\tbreak;\r\n \t\t\t\t\t\tcase 1:\r\n \t\t\t\t\t\t\tif (c.kind != \"localizable\") {\r\n \t\t\t\t\t\t\t\thelpers.push({label: c.name, name: c.name, map: null});\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\tbreak;\r\n \t\t\t\t\t\tcase 6:\r\n \t\t\t\t\t\t\tvar sheet = _g2.sheet;\r\n \t\t\t\t\t\t\tvar map = null;\r\n \t\t\t\t\t\t\tvar s = this.getSheet(sheet);\r\n \t\t\t\t\t\t\tif (s.props.displayColumn != null) {\r\n \t\t\t\t\t\t\t\tvar idCol = null;\r\n \t\t\t\t\t\t\t\tvar _g3 = 0;\r\n \t\t\t\t\t\t\t\tvar _g4 = s.columns;\r\n \t\t\t\t\t\t\t\twhile (_g3 < _g4.length) {\r\n \t\t\t\t\t\t\t\t\tvar c1 = _g4[_g3];\r\n \t\t\t\t\t\t\t\t\t++_g3;\r\n \t\t\t\t\t\t\t\t\tif (c1.type == cdb_ColumnType.TId) {\r\n \t\t\t\t\t\t\t\t\t\tidCol = c1;\r\n \t\t\t\t\t\t\t\t\t\tbreak;\r\n \t\t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\tif (idCol != null) {\r\n \t\t\t\t\t\t\t\t\tmap = new haxe_ds_StringMap();\r\n \t\t\t\t\t\t\t\t\tvar _g5 = 0;\r\n \t\t\t\t\t\t\t\t\tvar _g6 = s.lines;\r\n \t\t\t\t\t\t\t\t\twhile (_g5 < _g6.length) {\r\n \t\t\t\t\t\t\t\t\t\tvar o = _g6[_g5];\r\n \t\t\t\t\t\t\t\t\t\t++_g5;\r\n \t\t\t\t\t\t\t\t\t\tvar id1 = Reflect.field(o, idCol.name);\r\n \t\t\t\t\t\t\t\t\t\tvar name = Reflect.field(o, s.props.displayColumn);\r\n \t\t\t\t\t\t\t\t\t\tif (id1 != null && id1 != \"\" && name != null && name != \"\") {\r\n \t\t\t\t\t\t\t\t\t\t\tmap.h[id1] = name;\r\n \t\t\t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\thelpers.push({label: c.name, name: c.name, map: map});\r\n \t\t\t\t\t\t\tbreak;\r\n \t\t\t\t\t\tdefault:\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t\tif (id != null) {\r\n \t\t\t\t\thelpers = [];\r\n \t\t\t\t}\r\n \t\t\t\treturn {id: id == null ? null : id.name, idOpt: id == null ? false : id.opt, helpers: helpers};\r\n \t\t\t},\r\n \t\t\tresolveField: function (obj, path, linesData) {\r\n \t\t\t\tvar o = obj;\r\n \t\t\t\tvar _g = 0;\r\n \t\t\t\tvar _g1 = path.split(\".\");\r\n \t\t\t\twhile (_g < _g1.length) {\r\n \t\t\t\t\tvar s = _g1[_g];\r\n \t\t\t\t\t++_g;\r\n \t\t\t\t\tif (s == \"$root\") {\r\n \t\t\t\t\t\tif (linesData == null) {\r\n \t\t\t\t\t\t\treturn null;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tvar prefab = cdb_Lang.getObjParent(obj, linesData);\r\n \t\t\t\t\t\tif (prefab == null) {\r\n \t\t\t\t\t\t\treturn null;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\to = prefab;\r\n \t\t\t\t\t} else {\r\n \t\t\t\t\t\tif (!Object.prototype.hasOwnProperty.call(o, s)) {\r\n \t\t\t\t\t\t\treturn null;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\to = Reflect.field(o, s);\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t\tif (o == null) {\r\n \t\t\t\t\treturn null;\r\n \t\t\t\t} else {\r\n \t\t\t\t\treturn Std.string(o);\r\n \t\t\t\t}\r\n \t\t\t},\r\n \t\t\tbuildSheetXml: function (s, tabs, values, linesData, locFields, diff) {\r\n \t\t\t\tvar inf = this.getSheetHelpers(s);\r\n \t\t\t\tvar attr = cdb_Lang.LANG_CONFIG != null ? cdb_Lang.LANG_CONFIG[s.name] : null;\r\n \t\t\t\tif (attr != null) {\r\n \t\t\t\t\tvar access = attr;\r\n \t\t\t\t\tvar _g_access = access;\r\n \t\t\t\t\tvar _g_keys = Reflect.fields(access);\r\n \t\t\t\t\tvar _g_index = 0;\r\n \t\t\t\t\twhile (_g_index < _g_keys.length) {\r\n \t\t\t\t\t\tvar key = _g_keys[_g_index++];\r\n \t\t\t\t\t\tvar _g_value = _g_access[key];\r\n \t\t\t\t\t\tvar _g_key = key;\r\n \t\t\t\t\t\tvar k = _g_key;\r\n \t\t\t\t\t\tvar v = _g_value;\r\n \t\t\t\t\t\tinf.helpers.push({label: k, name: v, map: null});\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t\tvar buf_b = \"\";\r\n \t\t\t\tvar index = 0;\r\n \t\t\t\tvar prevData = this.currentLineData;\r\n \t\t\t\tvar _g_current = 0;\r\n \t\t\t\tvar _g_array = values;\r\n \t\t\t\twhile (_g_current < _g_array.length) {\r\n \t\t\t\t\tvar _g_value = _g_array[_g_current];\r\n \t\t\t\t\tvar _g_key = _g_current++;\r\n \t\t\t\t\tvar i = _g_key;\r\n \t\t\t\t\tvar o = _g_value;\r\n \t\t\t\t\tif (Object.prototype.hasOwnProperty.call(o, cdb_Lang.IGNORE_EXPORT_FIELD)) {\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tif (linesData != null) {\r\n \t\t\t\t\t\tthis.currentLineData = linesData[i];\r\n \t\t\t\t\t}\r\n \t\t\t\t\tvar id;\r\n \t\t\t\t\tif (inf.id == null) {\r\n \t\t\t\t\t\tid = \"line\" + index++;\r\n \t\t\t\t\t} else {\r\n \t\t\t\t\t\tid = Reflect.field(o, inf.id);\r\n \t\t\t\t\t\tif (id == \"\") {\r\n \t\t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tif (id == null) {\r\n \t\t\t\t\t\t\tif (!inf.idOpt) {\r\n \t\t\t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\tid = \"null\";\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t\tvar _g = [];\r\n \t\t\t\t\tvar _g1 = 0;\r\n \t\t\t\t\twhile (_g1 < locFields.length) {\r\n \t\t\t\t\t\tvar f = locFields[_g1];\r\n \t\t\t\t\t\t++_g1;\r\n \t\t\t\t\t\tvar l = this.getLocText(tabs, o, f, diff);\r\n \t\t\t\t\t\t_g.push({f: f, value: l.value, name: l.name});\r\n \t\t\t\t\t}\r\n \t\t\t\t\tvar locs = _g;\r\n \t\t\t\t\tvar hasLoc = false;\r\n \t\t\t\t\tvar _g2 = 0;\r\n \t\t\t\t\twhile (_g2 < locs.length) {\r\n \t\t\t\t\t\tvar l1 = locs[_g2];\r\n \t\t\t\t\t\t++_g2;\r\n \t\t\t\t\t\tif (l1.value != null && l1.value != \"\") {\r\n \t\t\t\t\t\t\thasLoc = true;\r\n \t\t\t\t\t\t\tbreak;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t\tif (!hasLoc) {\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tbuf_b += Std.string(\"\" + tabs + \"<\" + id);\r\n \t\t\t\t\tvar _g3 = 0;\r\n \t\t\t\t\tvar _g4 = inf.helpers;\r\n \t\t\t\t\twhile (_g3 < _g4.length) {\r\n \t\t\t\t\t\tvar c = _g4[_g3];\r\n \t\t\t\t\t\t++_g3;\r\n \t\t\t\t\t\tvar hid = this.resolveField(o, c.name, s.linesData != null ? s.linesData[i] : null);\r\n \t\t\t\t\t\tif (hid != null) {\r\n \t\t\t\t\t\t\tif (c.map != null) {\r\n \t\t\t\t\t\t\t\tvar v = c.map.h[hid];\r\n \t\t\t\t\t\t\t\tif (v != null) {\r\n \t\t\t\t\t\t\t\t\thid = v;\r\n \t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\tvar _this_r = new RegExp(\"\\\\$\", \"g\".split(\"u\").join(\"\"));\r\n \t\t\t\t\t\t\tvar label = c.label.replace(_this_r, \"_\");\r\n \t\t\t\t\t\t\tbuf_b += Std.string(\" \" + label + '=\"' + StringTools.htmlEscape(hid, true) + '\"');\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t\tbuf_b += \">\\n\";\r\n \t\t\t\t\tvar _g5 = 0;\r\n \t\t\t\t\twhile (_g5 < locs.length) {\r\n \t\t\t\t\t\tvar l2 = locs[_g5];\r\n \t\t\t\t\t\t++_g5;\r\n \t\t\t\t\t\tif (l2.value != null && l2.value != \"\") {\r\n \t\t\t\t\t\t\tvar _g6 = l2.f;\r\n \t\t\t\t\t\t\tvar tmp;\r\n \t\t\t\t\t\t\tif (_g6._hx_index == 0) {\r\n \t\t\t\t\t\t\t\tvar _g7 = _g6.c;\r\n \t\t\t\t\t\t\t\ttmp = true;\r\n \t\t\t\t\t\t\t} else {\r\n \t\t\t\t\t\t\t\ttmp = false;\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\tif (tmp || l2.value.indexOf(\"<\") < 0) {\r\n \t\t\t\t\t\t\t\tbuf_b += Std.string(\r\n \t\t\t\t\t\t\t\t\t\"\" + tabs + \"\\t<\" + l2.name + \">\" + l2.value + \"</\" + l2.name + \">\\n\"\r\n \t\t\t\t\t\t\t\t);\r\n \t\t\t\t\t\t\t} else {\r\n \t\t\t\t\t\t\t\tbuf_b += Std.string(\"\" + tabs + \"\\t<\" + l2.name + \">\\n\");\r\n \t\t\t\t\t\t\t\tbuf_b += Std.string(\"\" + tabs + \"\\t\\t\" + StringTools.trim(l2.value) + \"\\n\");\r\n \t\t\t\t\t\t\t\tbuf_b += Std.string(\"\" + tabs + \"\\t</\" + l2.name + \">\\n\");\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t\tbuf_b += Std.string(\"\" + tabs + \"</\" + id + \">\\n\");\r\n \t\t\t\t}\r\n \t\t\t\tthis.currentLineData = prevData;\r\n \t\t\t\treturn buf_b;\r\n \t\t\t},\r\n \t\t\t__class__: cdb_Lang,\r\n \t\t};\r\n \t\tvar cdb_Lz4Reader = function () {};\r\n \t\tcdb_Lz4Reader.__name__ = \"cdb.Lz4Reader\";\r\n \t\tcdb_Lz4Reader.uncompress = function (src, srcPos, srcLen, out, outPos) {\r\n \t\t\tvar outSave = outPos;\r\n \t\t\tvar srcEnd = srcPos + srcLen;\r\n \t\t\tif (srcLen == 0) {\r\n \t\t\t\treturn [srcPos, outPos, 0];\r\n \t\t\t}\r\n \t\t\tvar outLen = out.length;\r\n \t\t\twhile (true) {\r\n \t\t\t\tvar start = srcPos;\r\n \t\t\t\tvar tk = src.b[srcPos++];\r\n \t\t\t\tvar litLen = tk >> 4;\r\n \t\t\t\tvar matchLen = tk & 15;\r\n \t\t\t\tif (litLen == 15) {\r\n \t\t\t\t\tvar b;\r\n \t\t\t\t\tdo {\r\n \t\t\t\t\t\tb = src.b[srcPos++];\r\n \t\t\t\t\t\tlitLen += b;\r\n \t\t\t\t\t} while (b == 255);\r\n \t\t\t\t}\r\n \t\t\t\tif (outPos + litLen > outLen) {\r\n \t\t\t\t\treturn [start, outPos, litLen + matchLen];\r\n \t\t\t\t}\r\n \t\t\t\tswitch (litLen) {\r\n \t\t\t\t\tcase 0:\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\tcase 1:\r\n \t\t\t\t\t\tout.b[outPos] = src.b[srcPos++];\r\n \t\t\t\t\t\t++outPos;\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\tcase 2:\r\n \t\t\t\t\t\tout.b[outPos] = src.b[srcPos++];\r\n \t\t\t\t\t\t++outPos;\r\n \t\t\t\t\t\tout.b[outPos] = src.b[srcPos++];\r\n \t\t\t\t\t\t++outPos;\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\tcase 3:\r\n \t\t\t\t\t\tout.b[outPos] = src.b[srcPos++];\r\n \t\t\t\t\t\t++outPos;\r\n \t\t\t\t\t\tout.b[outPos] = src.b[srcPos++];\r\n \t\t\t\t\t\t++outPos;\r\n \t\t\t\t\t\tout.b[outPos] = src.b[srcPos++];\r\n \t\t\t\t\t\t++outPos;\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\tdefault:\r\n \t\t\t\t\t\tout.blit(outPos, src, srcPos, litLen);\r\n \t\t\t\t\t\toutPos += litLen;\r\n \t\t\t\t\t\tsrcPos += litLen;\r\n \t\t\t\t}\r\n \t\t\t\tif (srcPos >= srcEnd) {\r\n \t\t\t\t\tbreak;\r\n \t\t\t\t}\r\n \t\t\t\tvar offset = src.b[srcPos++];\r\n \t\t\t\toffset |= src.b[srcPos++] << 8;\r\n \t\t\t\tif (matchLen == 15) {\r\n \t\t\t\t\tvar b1;\r\n \t\t\t\t\tdo {\r\n \t\t\t\t\t\tb1 = src.b[srcPos++];\r\n \t\t\t\t\t\tmatchLen += b1;\r\n \t\t\t\t\t} while (b1 == 255);\r\n \t\t\t\t}\r\n \t\t\t\tmatchLen += 4;\r\n \t\t\t\tif (outPos + matchLen > outLen) {\r\n \t\t\t\t\treturn [start, outPos - litLen, litLen + matchLen];\r\n \t\t\t\t}\r\n \t\t\t\tif (matchLen >= 64 && matchLen <= offset) {\r\n \t\t\t\t\tout.blit(outPos, out, outPos - offset, matchLen);\r\n \t\t\t\t\toutPos += matchLen;\r\n \t\t\t\t} else {\r\n \t\t\t\t\tvar copyEnd = outPos + matchLen;\r\n \t\t\t\t\twhile (outPos < copyEnd) {\r\n \t\t\t\t\t\tout.b[outPos] = out.b[outPos - offset];\r\n \t\t\t\t\t\t++outPos;\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tif (srcPos != srcEnd) {\r\n \t\t\t\tthrow haxe_Exception.thrown(\"Read too much data \" + (srcPos - srcLen));\r\n \t\t\t}\r\n \t\t\treturn [srcPos, outPos, 0];\r\n \t\t};\r\n \t\tcdb_Lz4Reader.decodeString = function (s) {\r\n \t\t\tif (s == \"\") {\r\n \t\t\t\treturn new haxe_io_Bytes(new ArrayBuffer(0));\r\n \t\t\t}\r\n \t\t\tvar k = haxe_crypto_Base64.decode(s);\r\n \t\t\tif (k.b[0] != 4 || k.b[1] != 34 || k.b[2] != 77 || k.b[3] != 24) {\r\n \t\t\t\treturn k;\r\n \t\t\t}\r\n \t\t\treturn new cdb_Lz4Reader().read(k);\r\n \t\t};\r\n \t\tcdb_Lz4Reader.encodeBytes = function (b, compress) {\r\n \t\t\tvar tmp = compress && b.length > 0;\r\n \t\t\treturn haxe_crypto_Base64.encode(b);\r\n \t\t};\r\n \t\tcdb_Lz4Reader.prototype = {\r\n \t\t\tb: function () {\r\n \t\t\t\treturn this.bytes.b[this.pos++];\r\n \t\t\t},\r\n \t\t\tgrow: function (out, pos, len) {\r\n \t\t\t\tvar size = out.length;\r\n \t\t\t\tdo size = (size * 3) >> 1;\r\n \t\t\t\twhile (size < pos + len);\r\n \t\t\t\tvar out2 = new haxe_io_Bytes(new ArrayBuffer(size));\r\n \t\t\t\tout2.blit(0, out, 0, pos);\r\n \t\t\t\treturn out2;\r\n \t\t\t},\r\n \t\t\tread: function (bytes) {\r\n \t\t\t\tthis.bytes = bytes;\r\n \t\t\t\tthis.pos = 0;\r\n \t\t\t\tif (\r\n \t\t\t\t\tthis.bytes.b[this.pos++] != 4 ||\r\n \t\t\t\t\tthis.bytes.b[this.pos++] != 34 ||\r\n \t\t\t\t\tthis.bytes.b[this.pos++] != 77 ||\r\n \t\t\t\t\tthis.bytes.b[this.pos++] != 24\r\n \t\t\t\t) {\r\n \t\t\t\t\tthrow haxe_Exception.thrown(\"Invalid header\");\r\n \t\t\t\t}\r\n \t\t\t\tvar flags = this.bytes.b[this.pos++];\r\n \t\t\t\tif (flags >> 6 != 1) {\r\n \t\t\t\t\tthrow haxe_Exception.thrown(\"Invalid version \" + (flags >> 6));\r\n \t\t\t\t}\r\n \t\t\t\tvar blockChecksum = (flags & 16) != 0;\r\n \t\t\t\tvar streamSize = (flags & 8) != 0;\r\n \t\t\t\tvar streamChecksum = (flags & 4) != 0;\r\n \t\t\t\tif ((flags & 2) != 0) {\r\n \t\t\t\t\tthrow haxe_Exception.thrown(\"assert\");\r\n \t\t\t\t}\r\n \t\t\t\tvar presetDict = (flags & 1) != 0;\r\n \t\t\t\tvar bd = this.bytes.b[this.pos++];\r\n \t\t\t\tif ((bd & 128) != 0) {\r\n \t\t\t\t\tthrow haxe_Exception.thrown(\"assert\");\r\n \t\t\t\t}\r\n \t\t\t\tvar maxBlockSize = [0, 0, 0, 0, 65536, 262144, 1048576, 4194304][(bd >> 4) & 7];\r\n \t\t\t\tif (maxBlockSize == 0) {\r\n \t\t\t\t\tthrow haxe_Exception.thrown(\"assert\");\r\n \t\t\t\t}\r\n \t\t\t\tif ((bd & 15) != 0) {\r\n \t\t\t\t\tthrow haxe_Exception.thrown(\"assert\");\r\n \t\t\t\t}\r\n \t\t\t\tif (streamSize) {\r\n \t\t\t\t\tthis.pos += 8;\r\n \t\t\t\t}\r\n \t\t\t\tif (presetDict) {\r\n \t\t\t\t\tthrow haxe_Exception.thrown(\"Preset dictionary not supported\");\r\n \t\t\t\t}\r\n \t\t\t\tvar headerChk = this.bytes.b[this.pos++];\r\n \t\t\t\tvar out = new haxe_io_Bytes(new ArrayBuffer(128));\r\n \t\t\t\tvar outPos = 0;\r\n \t\t\t\twhile (true) {\r\n \t\t\t\t\tvar size =\r\n \t\t\t\t\t\tthis.bytes.b[this.pos++] |\r\n \t\t\t\t\t\t(this.bytes.b[this.pos++] << 8) |\r\n \t\t\t\t\t\t(this.bytes.b[this.pos++] << 16) |\r\n \t\t\t\t\t\t(this.bytes.b[this.pos++] << 24);\r\n \t\t\t\t\tif (size == 0) {\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tif ((size & -16) == 407710288) {\r\n \t\t\t\t\t\tvar dataSize =\r\n \t\t\t\t\t\t\tthis.bytes.b[this.pos++] |\r\n \t\t\t\t\t\t\t(this.bytes.b[this.pos++] << 8) |\r\n \t\t\t\t\t\t\t(this.bytes.b[this.pos++] << 16) |\r\n \t\t\t\t\t\t\t(this.bytes.b[this.pos++] << 24);\r\n \t\t\t\t\t\tthis.pos += dataSize;\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tif ((size & -2147483648) != 0) {\r\n \t\t\t\t\t\tsize &= 2147483647;\r\n \t\t\t\t\t\tif (outPos + out.length < size) {\r\n \t\t\t\t\t\t\tout = this.grow(out, outPos, size);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tout.blit(outPos, bytes, this.pos, size);\r\n \t\t\t\t\t\toutPos += size;\r\n \t\t\t\t\t\tthis.pos += size;\r\n \t\t\t\t\t} else {\r\n \t\t\t\t\t\tvar srcEnd = this.pos + size;\r\n \t\t\t\t\t\twhile (this.pos < srcEnd) {\r\n \t\t\t\t\t\t\tvar r = cdb_Lz4Reader.uncompress(bytes, this.pos, srcEnd - this.pos, out, outPos);\r\n \t\t\t\t\t\t\tthis.pos = r[0];\r\n \t\t\t\t\t\t\toutPos = r[1];\r\n \t\t\t\t\t\t\tvar req = r[2];\r\n \t\t\t\t\t\t\tif (req > 0) {\r\n \t\t\t\t\t\t\t\tout = this.grow(out, outPos, req);\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t\tif (blockChecksum) {\r\n \t\t\t\t\t\tthis.pos += 4;\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t\treturn out.sub(0, outPos);\r\n \t\t\t},\r\n \t\t\t__class__: cdb_Lz4Reader,\r\n \t\t};\r\n \t\tvar cdb_Module = function () {};\r\n \t\tcdb_Module.__name__ = \"cdb.Module\";\r\n \t\tcdb_Module.getSheetLines = function (sheets, s) {\r\n \t\t\tif (s.props.dataFiles != null) {\r\n \t\t\t\treturn [];\r\n \t\t\t}\r\n \t\t\tif (!s.props.hide) {\r\n \t\t\t\treturn s.lines;\r\n \t\t\t}\r\n \t\t\tvar name = s.name.split(\"@\");\r\n \t\t\tvar col = name.pop();\r\n \t\t\tvar parent = name.join(\"@\");\r\n \t\t\tvar psheet = null;\r\n \t\t\tvar _g = 0;\r\n \t\t\twhile (_g < sheets.length) {\r\n \t\t\t\tvar sp = sheets[_g];\r\n \t\t\t\t++_g;\r\n \t\t\t\tif (sp.name == parent) {\r\n \t\t\t\t\tpsheet = sp;\r\n \t\t\t\t\tbreak;\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tif (psheet == null) {\r\n \t\t\t\treturn s.lines;\r\n \t\t\t}\r\n \t\t\tvar out = [];\r\n \t\t\tvar _g = 0;\r\n \t\t\tvar _g1 = cdb_Module.getSheetLines(sheets, psheet);\r\n \t\t\twhile (_g < _g1.length) {\r\n \t\t\t\tvar o = _g1[_g];\r\n \t\t\t\t++_g;\r\n \t\t\t\tvar objs = Reflect.field(o, col);\r\n \t\t\t\tif (objs == null) {\r\n \t\t\t\t\tcontinue;\r\n \t\t\t\t}\r\n \t\t\t\tif (!(objs instanceof Array)) {\r\n \t\t\t\t\tobjs = [objs];\r\n \t\t\t\t}\r\n \t\t\t\tvar _g2 = 0;\r\n \t\t\t\tvar value = objs;\r\n \t\t\t\tvar _g3 = value instanceof Array ? value : null;\r\n \t\t\t\twhile (_g2 < _g3.length) {\r\n \t\t\t\t\tvar o1 = _g3[_g2];\r\n \t\t\t\t\t++_g2;\r\n \t\t\t\t\tout.push(o1);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\treturn out;\r\n \t\t};\r\n \t\tcdb_Module.build = function (file, typeName) {\r\n \t\t\tthrow haxe_Exception.thrown(\"This can only be called in a macro\");\r\n \t\t};\r\n \t\tvar cdb_Parser = function () {};\r\n \t\tcdb_Parser.__name__ = \"cdb.Parser\";\r\n \t\tcdb_Parser.saveType = function (t) {\r\n \t\t\tswitch (t._hx_index) {\r\n \t\t\t\tcase 5:\r\n \t\t\t\t\tvar values = t.values;\r\n \t\t\t\t\treturn t._hx_index + \":\" + values.join(\",\");\r\n \t\t\t\tcase 6:\r\n \t\t\t\t\tvar _g = t.sheet;\r\n \t\t\t\t\treturn t._hx_index + \":\" + Std.string(Type.enumParameters(t)[0]);\r\n \t\t\t\tcase 9:\r\n \t\t\t\t\tvar _g = t.name;\r\n \t\t\t\t\treturn t._hx_index + \":\" + Std.string(Type.enumParameters(t)[0]);\r\n \t\t\t\tcase 10:\r\n \t\t\t\t\tvar values = t.values;\r\n \t\t\t\t\treturn t._hx_index + \":\" + values.join(\",\");\r\n \t\t\t\tcase 12:\r\n \t\t\t\t\tvar _g = t.type;\r\n \t\t\t\t\treturn t._hx_index + \":\" + Std.string(Type.enumParameters(t)[0]);\r\n \t\t\t\tdefault:\r\n \t\t\t\t\tif (t._hx_index == null) {\r\n \t\t\t\t\t\treturn \"null\";\r\n \t\t\t\t\t} else {\r\n \t\t\t\t\t\treturn \"\" + t._hx_index;\r\n \t\t\t\t\t}\r\n \t\t\t}\r\n \t\t};\r\n \t\tcdb_Parser.getType = function (str) {\r\n \t\t\tvar _g = Std.parseInt(str);\r\n \t\t\tif (_g == null) {\r\n \t\t\t\tthrow haxe_Exception.thrown(\"Unknown type \" + str);\r\n \t\t\t} else {\r\n \t\t\t\tswitch (_g) {\r\n \t\t\t\t\tcase 0:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TId;\r\n \t\t\t\t\tcase 1:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TString;\r\n \t\t\t\t\tcase 2:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TBool;\r\n \t\t\t\t\tcase 3:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TInt;\r\n \t\t\t\t\tcase 4:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TFloat;\r\n \t\t\t\t\tcase 5:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TEnum(HxOverrides.substr(str, str.indexOf(\":\") + 1, null).split(\",\"));\r\n \t\t\t\t\tcase 6:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TRef(HxOverrides.substr(str, str.indexOf(\":\") + 1, null));\r\n \t\t\t\t\tcase 7:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TImage;\r\n \t\t\t\t\tcase 8:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TList;\r\n \t\t\t\t\tcase 9:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TCustom(HxOverrides.substr(str, str.indexOf(\":\") + 1, null));\r\n \t\t\t\t\tcase 10:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TFlags(HxOverrides.substr(str, str.indexOf(\":\") + 1, null).split(\",\"));\r\n \t\t\t\t\tcase 11:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TColor;\r\n \t\t\t\t\tcase 12:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TLayer(HxOverrides.substr(str, str.indexOf(\":\") + 1, null));\r\n \t\t\t\t\tcase 13:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TFile;\r\n \t\t\t\t\tcase 14:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TTilePos;\r\n \t\t\t\t\tcase 15:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TTileLayer;\r\n \t\t\t\t\tcase 16:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TDynamic;\r\n \t\t\t\t\tcase 17:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TProperties;\r\n \t\t\t\t\tcase 18:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TGradient;\r\n \t\t\t\t\tcase 19:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TCurve;\r\n \t\t\t\t\tcase 20:\r\n \t\t\t\t\t\treturn cdb_ColumnType.TGuid;\r\n \t\t\t\t\tdefault:\r\n \t\t\t\t\t\tthrow haxe_Exception.thrown(\"Unknown type \" + str);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t};\r\n \t\tcdb_Parser.parse = function (content, editMode) {\r\n \t\t\tif (content == null) {\r\n \t\t\t\tthrow haxe_Exception.thrown(\"CDB content is null\");\r\n \t\t\t}\r\n \t\t\tvar data = JSON.parse(content);\r\n \t\t\tvar _g = 0;\r\n \t\t\tvar _g1 = data.sheets;\r\n \t\t\twhile (_g < _g1.length) {\r\n \t\t\t\tvar s = _g1[_g];\r\n \t\t\t\t++_g;\r\n \t\t\t\tvar _g2 = 0;\r\n \t\t\t\tvar _g3 = s.columns;\r\n \t\t\t\twhile (_g2 < _g3.length) {\r\n \t\t\t\t\tvar c = _g3[_g2];\r\n \t\t\t\t\t++_g2;\r\n \t\t\t\t\tc.type = cdb_Parser.getType(c.typeStr);\r\n \t\t\t\t\tc.typeStr = null;\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tvar _g = 0;\r\n \t\t\tvar _g1 = data.customTypes;\r\n \t\t\twhile (_g < _g1.length) {\r\n \t\t\t\tvar t = _g1[_g];\r\n \t\t\t\t++_g;\r\n \t\t\t\tvar _g2 = 0;\r\n \t\t\t\tvar _g3 = t.cases;\r\n \t\t\t\twhile (_g2 < _g3.length) {\r\n \t\t\t\t\tvar c = _g3[_g2];\r\n \t\t\t\t\t++_g2;\r\n \t\t\t\t\tvar _g4 = 0;\r\n \t\t\t\t\tvar _g5 = c.args;\r\n \t\t\t\t\twhile (_g4 < _g5.length) {\r\n \t\t\t\t\t\tvar a = _g5[_g4];\r\n \t\t\t\t\t\t++_g4;\r\n \t\t\t\t\t\ta.type = cdb_Parser.getType(a.typeStr);\r\n \t\t\t\t\t\ta.typeStr = null;\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tvar _g = 0;\r\n \t\t\tvar _g1 = data.sheets;\r\n \t\t\twhile (_g < _g1.length) {\r\n \t\t\t\tvar s = _g1[_g];\r\n \t\t\t\t++_g;\r\n \t\t\t\tif (!(editMode || s.props.hasGroup)) {\r\n \t\t\t\t\tcontinue;\r\n \t\t\t\t}\r\n \t\t\t\tif (s.separators == null) {\r\n \t\t\t\t\tvar ids = Reflect.field(s, \"separatorIds\");\r\n \t\t\t\t\tvar _g2 = [];\r\n \t\t\t\t\tvar _g3 = 0;\r\n \t\t\t\t\twhile (_g3 < ids.length) {\r\n \t\t\t\t\t\tvar i = ids[_g3];\r\n \t\t\t\t\t\t++_g3;\r\n \t\t\t\t\t\tif (typeof i == \"number\" && (i | 0) === i) {\r\n \t\t\t\t\t\t\t_g2.push({index: i});\r\n \t\t\t\t\t\t} else {\r\n \t\t\t\t\t\t\t_g2.push({id: i});\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t\ts.separators = _g2;\r\n \t\t\t\t\tReflect.deleteField(s, \"separatorIds\");\r\n \t\t\t\t}\r\n \t\t\t\tvar indexMap = null;\r\n \t\t\t\tvar _g4 = 0;\r\n \t\t\t\tvar _g5 = s.separators.length;\r\n \t\t\t\twhile (_g4 < _g5) {\r\n \t\t\t\t\tvar i1 = _g4++;\r\n \t\t\t\t\tvar sep = s.separators[i1];\r\n \t\t\t\t\tif (typeof sep == \"number\" && (sep | 0) === sep) {\r\n \t\t\t\t\t\ts.separators[i1] = {index: sep};\r\n \t\t\t\t\t} else if (sep.id != null) {\r\n \t\t\t\t\t\tif (indexMap == null) {\r\n \t\t\t\t\t\t\tvar idField = null;\r\n \t\t\t\t\t\t\tvar _g6 = 0;\r\n \t\t\t\t\t\t\tvar _g7 = s.columns;\r\n \t\t\t\t\t\t\twhile (_g6 < _g7.length) {\r\n \t\t\t\t\t\t\t\tvar c = _g7[_g6];\r\n \t\t\t\t\t\t\t\t++_g6;\r\n \t\t\t\t\t\t\t\tif (c.type == cdb_ColumnType.TId) {\r\n \t\t\t\t\t\t\t\t\tidField = c.name;\r\n \t\t\t\t\t\t\t\t\tbreak;\r\n \t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\tindexMap = new haxe_ds_StringMap();\r\n \t\t\t\t\t\t\tvar _g8 = 0;\r\n \t\t\t\t\t\t\tvar _g9 = s.lines.length;\r\n \t\t\t\t\t\t\twhile (_g8 < _g9) {\r\n \t\t\t\t\t\t\t\tvar i2 = _g8++;\r\n \t\t\t\t\t\t\t\tvar l = s.lines[i2];\r\n \t\t\t\t\t\t\t\tvar id = Reflect.field(l, idField);\r\n \t\t\t\t\t\t\t\tif (id != null) {\r\n \t\t\t\t\t\t\t\t\tindexMap.h[id] = i2;\r\n \t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tsep.index = indexMap.h[sep.id];\r\n \t\t\t\t\t\tReflect.deleteField(sep, \"id\");\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t\tvar titles = Reflect.field(s.props, \"separatorTitles\");\r\n \t\t\t\tif (titles != null) {\r\n \t\t\t\t\tReflect.deleteField(s.props, \"separatorTitles\");\r\n \t\t\t\t\tvar _g10 = 0;\r\n \t\t\t\t\tvar _g11 = titles.length;\r\n \t\t\t\t\twhile (_g10 < _g11) {\r\n \t\t\t\t\t\tvar i3 = _g10++;\r\n \t\t\t\t\t\tif (titles[i3] != null) {\r\n \t\t\t\t\t\t\ts.separators[i3].title = titles[i3];\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\treturn data;\r\n \t\t};\r\n \t\tcdb_Parser.save = function (data) {\r\n \t\t\tvar save = [];\r\n \t\t\tvar seps = [];\r\n \t\t\tvar _g = 0;\r\n \t\t\tvar _g1 = data.sheets;\r\n \t\t\twhile (_g < _g1.length) {\r\n \t\t\t\tvar s = _g1[_g];\r\n \t\t\t\t++_g;\r\n \t\t\t\tvar idField = null;\r\n \t\t\t\tvar _g2 = 0;\r\n \t\t\t\tvar _g3 = s.columns;\r\n \t\t\t\twhile (_g2 < _g3.length) {\r\n \t\t\t\t\tvar c = _g3[_g2];\r\n \t\t\t\t\t++_g2;\r\n \t\t\t\t\tif (c.type == cdb_ColumnType.TId && idField == null) {\r\n \t\t\t\t\t\tidField = c.name;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tsave.push(c.type);\r\n \t\t\t\t\tif (c.typeStr == null) {\r\n \t\t\t\t\t\tc.typeStr = cdb_Parser.saveType(c.type);\r\n \t\t\t\t\t}\r\n \t\t\t\t\tReflect.deleteField(c, \"type\");\r\n \t\t\t\t}\r\n \t\t\t\tvar _g4 = [];\r\n \t\t\t\tvar _g5 = 0;\r\n \t\t\t\tvar _g6 = s.separators;\r\n \t\t\t\twhile (_g5 < _g6.length) {\r\n \t\t\t\t\tvar v = _g6[_g5];\r\n \t\t\t\t\t++_g5;\r\n \t\t\t\t\tif (v.id != null || v.index != null) {\r\n \t\t\t\t\t\t_g4.push(v);\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t\ts.separators = _g4;\r\n \t\t\t\tvar oldSeps = null;\r\n \t\t\t\tif (idField != null && s.separators.length > 0) {\r\n \t\t\t\t\tvar uniqueIDs = true;\r\n \t\t\t\t\tvar uids_h = Object.create(null);\r\n \t\t\t\t\tvar _g7 = 0;\r\n \t\t\t\t\tvar _g8 = s.lines;\r\n \t\t\t\t\twhile (_g7 < _g8.length) {\r\n \t\t\t\t\t\tvar l = _g8[_g7];\r\n \t\t\t\t\t\t++_g7;\r\n \t\t\t\t\t\tvar id = Reflect.field(l, idField);\r\n \t\t\t\t\t\tif (id != null) {\r\n \t\t\t\t\t\t\tif (uids_h[id]) {\r\n \t\t\t\t\t\t\t\tuniqueIDs = false;\r\n \t\t\t\t\t\t\t\tbreak;\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\tuids_h[id] = true;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t\tif (uniqueIDs) {\r\n \t\t\t\t\t\toldSeps = s.separators;\r\n \t\t\t\t\t\ts.separators = [];\r\n \t\t\t\t\t\tvar _g9 = 0;\r\n \t\t\t\t\t\twhile (_g9 < oldSeps.length) {\r\n \t\t\t\t\t\t\tvar sep = oldSeps[_g9];\r\n \t\t\t\t\t\t\t++_g9;\r\n \t\t\t\t\t\t\tvar obj = s.lines[sep.index];\r\n \t\t\t\t\t\t\tvar id1 = obj != null ? Reflect.field(obj, idField) : null;\r\n \t\t\t\t\t\t\tvar sep1 = sep;\r\n \t\t\t\t\t\t\tif (id1 != null) {\r\n \t\t\t\t\t\t\t\tsep1 = Reflect.copy(sep1);\r\n \t\t\t\t\t\t\t\tReflect.deleteField(sep1, \"index\");\r\n \t\t\t\t\t\t\t\tsep1.id = id1;\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\tif (sep1.id != null || sep1.index != null) {\r\n \t\t\t\t\t\t\t\ts.separators.push(sep1);\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t\tseps.push(oldSeps);\r\n \t\t\t}\r\n \t\t\tvar _g = 0;\r\n \t\t\tvar _g1 = data.customTypes;\r\n \t\t\twhile (_g < _g1.length) {\r\n \t\t\t\tvar t = _g1[_g];\r\n \t\t\t\t++_g;\r\n \t\t\t\tvar _g2 = 0;\r\n \t\t\t\tvar _g3 = t.cases;\r\n \t\t\t\twhile (_g2 < _g3.length) {\r\n \t\t\t\t\tvar c = _g3[_g2];\r\n \t\t\t\t\t++_g2;\r\n \t\t\t\t\tvar _g4 = 0;\r\n \t\t\t\t\tvar _g5 = c.args;\r\n \t\t\t\t\twhile (_g4 < _g5.length) {\r\n \t\t\t\t\t\tvar a = _g5[_g4];\r\n \t\t\t\t\t\t++_g4;\r\n \t\t\t\t\t\tsave.push(a.type);\r\n \t\t\t\t\t\tif (a.typeStr == null) {\r\n \t\t\t\t\t\t\ta.typeStr = cdb_Parser.saveType(a.type);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tReflect.deleteField(a, \"type\");\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tvar str = JSON.stringify(data, null, \"\\t\");\r\n \t\t\tvar _g = 0;\r\n \t\t\tvar _g1 = data.sheets;\r\n \t\t\twhile (_g < _g1.length) {\r\n \t\t\t\tvar s = _g1[_g];\r\n \t\t\t\t++_g;\r\n \t\t\t\tvar _g2 = 0;\r\n \t\t\t\tvar _g3 = s.columns;\r\n \t\t\t\twhile (_g2 < _g3.length) {\r\n \t\t\t\t\tvar c = _g3[_g2];\r\n \t\t\t\t\t++_g2;\r\n \t\t\t\t\tc.type = save.shift();\r\n \t\t\t\t}\r\n \t\t\t\tvar oldSeps = seps.shift();\r\n \t\t\t\tif (oldSeps != null) {\r\n \t\t\t\t\ts.separators = oldSeps;\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tvar _g = 0;\r\n \t\t\tvar _g1 = data.customTypes;\r\n \t\t\twhile (_g < _g1.length) {\r\n \t\t\t\tvar t = _g1[_g];\r\n \t\t\t\t++_g;\r\n \t\t\t\tvar _g2 = 0;\r\n \t\t\t\tvar _g3 = t.cases;\r\n \t\t\t\twhile (_g2 < _g3.length) {\r\n \t\t\t\t\tvar c = _g3[_g2];\r\n \t\t\t\t\t++_g2;\r\n \t\t\t\t\tvar _g4 = 0;\r\n \t\t\t\t\tvar _g5 = c.args;\r\n \t\t\t\t\twhile (_g4 < _g5.length) {\r\n \t\t\t\t\t\tvar a = _g5[_g4];\r\n \t\t\t\t\t\t++_g4;\r\n \t\t\t\t\t\ta.type = save.shift();\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\treturn str;\r\n \t\t};\r\n \t\tvar cdb__$Types_ArrayIterator = function (a) {\r\n \t\t\tthis.a = a;\r\n \t\t\tthis.pos = 0;\r\n \t\t};\r\n \t\tcdb__$Types_ArrayIterator.__name__ = \"cdb._Types.ArrayIterator\";\r\n \t\tcdb__$Types_ArrayIterator.prototype = {\r\n \t\t\thasNext: function () {\r\n \t\t\t\treturn this.pos < this.a.length;\r\n \t\t\t},\r\n \t\t\tnext: function () {\r\n \t\t\t\treturn this.a[this.pos++];\r\n \t\t\t},\r\n \t\t\t__class__: cdb__$Types_ArrayIterator,\r\n \t\t};\r\n \t\tvar cdb__$Types_FlagsIterator = function (flags) {\r\n \t\t\tthis.flags = flags;\r\n \t\t\tthis.k = 0;\r\n \t\t};\r\n \t\tcdb__$Types_FlagsIterator.__name__ = \"cdb._Types.FlagsIterator\";\r\n \t\tcdb__$Types_FlagsIterator.prototype = {\r\n \t\t\thasNext: function () {\r\n \t\t\t\treturn this.flags >= 1 << this.k;\r\n \t\t\t},\r\n \t\t\tnext: function () {\r\n \t\t\t\twhile ((this.flags & (1 << this.k)) == 0) this.k++;\r\n \t\t\t\treturn this.k++;\r\n \t\t\t},\r\n \t\t\t__class__: cdb__$Types_FlagsIterator,\r\n \t\t};\r\n \t\tvar cdb_ArrayRead = {};\r\n \t\tcdb_ArrayRead._new = function (a) {\r\n \t\t\treturn a;\r\n \t\t};\r\n \t\tcdb_ArrayRead.get_length = function (this1) {\r\n \t\t\treturn this1.length;\r\n \t\t};\r\n \t\tcdb_ArrayRead.toIterable = function (this1) {\r\n \t\t\treturn this1;\r\n \t\t};\r\n \t\tcdb_ArrayRead.iterator = function (this1) {\r\n \t\t\treturn new cdb__$Types_ArrayIterator(this1);\r\n \t\t};\r\n \t\tcdb_ArrayRead.castArray = function (this1) {\r\n \t\t\treturn this1;\r\n \t\t};\r\n \t\tcdb_ArrayRead.toArrayCopy = function (this1) {\r\n \t\t\treturn this1.slice();\r\n \t\t};\r\n \t\tcdb_ArrayRead.getIndex = function (this1, v) {\r\n \t\t\treturn this1[v];\r\n \t\t};\r\n \t\tvar cdb_Flags = {};\r\n \t\tcdb_Flags._new = function (x) {\r\n \t\t\treturn x;\r\n \t\t};\r\n \t\tcdb_Flags.has = function (this1, t) {\r\n \t\t\treturn (this1 & (1 << t)) != 0;\r\n \t\t};\r\n \t\tcdb_Flags.set = function (this1, t) {\r\n \t\t\tthis1 |= 1 << t;\r\n \t\t};\r\n \t\tcdb_Flags.unset = function (this1, t) {\r\n \t\t\tthis1 &= ~(1 << t);\r\n \t\t};\r\n \t\tcdb_Flags.iterator = function (this1) {\r\n \t\t\treturn new cdb__$Types_FlagsIterator(this1);\r\n \t\t};\r\n \t\tcdb_Flags.toInt = function (this1) {\r\n \t\t\treturn this1;\r\n \t\t};\r\n \t\tvar cdb_Gradient = {};\r\n \t\tcdb_Gradient.get_data = function (this1) {\r\n \t\t\treturn this1;\r\n \t\t};\r\n \t\tcdb_Gradient._new = function (g) {\r\n \t\t\treturn g;\r\n \t\t};\r\n \t\tcdb_Gradient.generate = function (this1, count) {\r\n \t\t\tvar r0 = 0;\r\n \t\t\tvar g0 = 0;\r\n \t\t\tvar b0 = 0;\r\n \t\t\tvar a0 = 0;\r\n \t\t\tvar r1 = 0;\r\n \t\t\tvar g1 = 0;\r\n \t\t\tvar b1 = 0;\r\n \t\t\tvar a1 = 0;\r\n \t\t\tvar currentStop = 0;\r\n \t\t\tvar tmp = this1.positions[currentStop];\r\n \t\t\tvar stop0 = tmp != null ? tmp : 0.0;\r\n \t\t\tvar c = this1.colors[currentStop];\r\n \t\t\ta1 = ((c >> 24) & 255) / 255.0;\r\n \t\t\ta0 = a1;\r\n \t\t\tr1 = ((c >> 16) & 255) / 255.0;\r\n \t\t\tr0 = r1;\r\n \t\t\tg1 = ((c >> 8) & 255) / 255.0;\r\n \t\t\tg0 = g1;\r\n \t\t\tb1 = (c & 255) / 255.0;\r\n \t\t\tb0 = b1;\r\n \t\t\tvar stop1 = stop0;\r\n \t\t\tvar outColors = [];\r\n \t\t\tvar _g = 0;\r\n \t\t\tvar _g1 = count;\r\n \t\t\twhile (_g < _g1) {\r\n \t\t\t\tvar current = _g++;\r\n \t\t\t\tvar currentPos = current / (count - 1);\r\n \t\t\t\tif (currentPos > stop1) {\r\n \t\t\t\t\tstop0 = stop1;\r\n \t\t\t\t\ta0 = a1;\r\n \t\t\t\t\tr0 = r1;\r\n \t\t\t\t\tg0 = g1;\r\n \t\t\t\t\tb0 = b1;\r\n \t\t\t\t\t++currentStop;\r\n \t\t\t\t\tif (currentStop < this1.positions.length) {\r\n \t\t\t\t\t\tstop1 = this1.positions[currentStop];\r\n \t\t\t\t\t\tvar c = this1.colors[currentStop];\r\n \t\t\t\t\t\ta1 = ((c >> 24) & 255) / 255.0;\r\n \t\t\t\t\t\tr1 = ((c >> 16) & 255) / 255.0;\r\n \t\t\t\t\t\tg1 = ((c >> 8) & 255) / 255.0;\r\n \t\t\t\t\t\tb1 = (c & 255) / 255.0;\r\n \t\t\t\t\t} else {\r\n \t\t\t\t\t\tstop1 = 1.0;\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t\tvar r = r0;\r\n \t\t\t\tvar b = b0;\r\n \t\t\t\tvar g = g0;\r\n \t\t\t\tvar a = a0;\r\n \t\t\t\tif (stop1 > stop0) {\r\n \t\t\t\t\tvar blend = (currentPos - stop0) / (stop1 - stop0);\r\n \t\t\t\t\tblend = Math.min(Math.max(0.0, blend), 1.0);\r\n \t\t\t\t\tr = Math.min(Math.max(0.0, (r1 - r0) * blend + r0), 1.0);\r\n \t\t\t\t\tg = Math.min(Math.max(0.0, (g1 - g0) * blend + g0), 1.0);\r\n \t\t\t\t\tb = Math.min(Math.max(0.0, (b1 - b0) * blend + b0), 1.0);\r\n \t\t\t\t\ta = Math.min(Math.max(0.0, (a1 - a0) * blend + a0), 1.0);\r\n \t\t\t\t}\r\n \t\t\t\tvar cInt =\r\n \t\t\t\t\t((Math.round(a * 255.0) | 0) << 24) |\r\n \t\t\t\t\t((Math.round(r * 255.0) | 0) << 16) |\r\n \t\t\t\t\t((Math.round(g * 255.0) | 0) << 8) |\r\n \t\t\t\t\t(Math.round(b * 255.0) | 0);\r\n \t\t\t\toutColors.push(cInt);\r\n \t\t\t}\r\n \t\t\treturn outColors;\r\n \t\t};\r\n \t\tvar cdb_Curve = {};\r\n \t\tcdb_Curve.get_data = function (this1) {\r\n \t\t\treturn this1;\r\n \t\t};\r\n \t\tcdb_Curve._new = function (d) {\r\n \t\t\treturn d;\r\n \t\t};\r\n \t\tcdb_Curve.bake = function (this1, resolution) {\r\n \t\t\treturn new cdb_BakedCurve(this1, resolution);\r\n \t\t};\r\n \t\tcdb_Curve.eval = function (this1, t) {\r\n \t\t\tvar numKeys = (this1.length / 6) | 0;\r\n \t\t\tswitch (numKeys) {\r\n \t\t\t\tcase 0:\r\n \t\t\t\t\treturn 0;\r\n \t\t\t\tcase 1:\r\n \t\t\t\t\treturn this1[1];\r\n \t\t\t\tdefault:\r\n \t\t\t}\r\n \t\t\tvar idx = -1;\r\n \t\t\tvar _g = 0;\r\n \t\t\tvar _g1 = numKeys;\r\n \t\t\twhile (_g < _g1) {\r\n \t\t\t\tvar ik = _g++;\r\n \t\t\t\tif (t > this1[ik * 6]) {\r\n \t\t\t\t\tidx = ik;\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tif (idx < 0) {\r\n \t\t\t\treturn this1[1];\r\n \t\t\t}\r\n \t\t\tif (idx > numKeys - 1 || cdb_Curve.keyMode(this1, idx) == 3) {\r\n \t\t\t\treturn this1[idx * 6 + 1];\r\n \t\t\t}\r\n \t\t\tvar cur = idx;\r\n \t\t\tvar next = idx + 1;\r\n \t\t\tvar minT = 0;\r\n \t\t\tvar maxT = 1;\r\n \t\t\tvar maxDelta = 0.04;\r\n \t\t\twhile (maxT - minT > maxDelta) {\r\n \t\t\t\tvar curT = (maxT + minT) * 0.5;\r\n \t\t\t\tvar this2 = this1[cur * 6];\r\n \t\t\t\tvar c1 = cdb_Curve.keyMode(this1, cur) == 1 ? this1[cur * 6 + 4] : 0.0;\r\n \t\t\t\tvar this3 = this1[next * 6];\r\n \t\t\t\tvar c2 = cdb_Curve.keyMode(this1, next) == 1 ? this1[next * 6 + 2] : 0.0;\r\n \t\t\t\tvar u = 1 - curT;\r\n \t\t\t\tvar x =\r\n \t\t\t\t\tu * u * u * this1[cur * 6] +\r\n \t\t\t\t\t(this2 + c1) * 3 * curT * u * u +\r\n \t\t\t\t\t(this3 + c2) * 3 * curT * curT * u +\r\n \t\t\t\t\tcurT * curT * curT * this1[next * 6];\r\n \t\t\t\tif (x > t) {\r\n \t\t\t\t\tmaxT = curT;\r\n \t\t\t\t} else {\r\n \t\t\t\t\tminT = curT;\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tvar this2 = this1[cur * 6];\r\n \t\t\tvar c1 = cdb_Curve.keyMode(this1, cur) == 1 ? this1[cur * 6 + 4] : 0.0;\r\n \t\t\tvar this3 = this1[next * 6];\r\n \t\t\tvar c2 = cdb_Curve.keyMode(this1, next) == 1 ? this1[next * 6 + 2] : 0.0;\r\n \t\t\tvar u = 1 - minT;\r\n \t\t\tvar x0 =\r\n \t\t\t\tu * u * u * this1[cur * 6] +\r\n \t\t\t\t(this2 + c1) * 3 * minT * u * u +\r\n \t\t\t\t(this3 + c2) * 3 * minT * minT * u +\r\n \t\t\t\tminT * minT * minT * this1[next * 6];\r\n \t\t\tvar this2 = this1[cur * 6];\r\n \t\t\tvar c1 = cdb_Curve.keyMode(this1, cur) == 1 ? this1[cur * 6 + 4] : 0.0;\r\n \t\t\tvar this3 = this1[next * 6];\r\n \t\t\tvar c2 = cdb_Curve.keyMode(this1, next) == 1 ? this1[next * 6 + 2] : 0.0;\r\n \t\t\tvar u = 1 - maxT;\r\n \t\t\tvar x1 =\r\n \t\t\t\tu * u * u * this1[cur * 6] +\r\n \t\t\t\t(this2 + c1) * 3 * maxT * u * u +\r\n \t\t\t\t(this3 + c2) * 3 * maxT * maxT * u +\r\n \t\t\t\tmaxT * maxT * maxT * this1[next * 6];\r\n \t\t\tvar dx = x1 - x0;\r\n \t\t\tvar xfactor = dx == 0 ? 0.5 : (t - x0) / dx;\r\n \t\t\tvar this2 = this1[cur * 6 + 1];\r\n \t\t\tvar c1 = cdb_Curve.keyMode(this1, cur) == 1 ? this1[cur * 6 + 5] : 0.0;\r\n \t\t\tvar this3 = this1[next * 6 + 1];\r\n \t\t\tvar c2 = cdb_Curve.keyMode(this1, next) == 1 ? this1[next * 6 + 3] : 0.0;\r\n \t\t\tvar u = 1 - minT;\r\n \t\t\tvar y0 =\r\n \t\t\t\tu * u * u * this1[cur * 6 + 1] +\r\n \t\t\t\t(this2 + c1) * 3 * minT * u * u +\r\n \t\t\t\t(this3 + c2) * 3 * minT * minT * u +\r\n \t\t\t\tminT * minT * minT * this1[next * 6 + 1];\r\n \t\t\tvar this2 = this1[cur * 6 + 1];\r\n \t\t\tvar c1 = cdb_Curve.keyMode(this1, cur) == 1 ? this1[cur * 6 + 5] : 0.0;\r\n \t\t\tvar this3 = this1[next * 6 + 1];\r\n \t\t\tvar c2 = cdb_Curve.keyMode(this1, next) == 1 ? this1[next * 6 + 3] : 0.0;\r\n \t\t\tvar u = 1 - maxT;\r\n \t\t\tvar y1 =\r\n \t\t\t\tu * u * u * this1[cur * 6 + 1] +\r\n \t\t\t\t(this2 + c1) * 3 * maxT * u * u +\r\n \t\t\t\t(this3 + c2) * 3 * maxT * maxT * u +\r\n \t\t\t\tmaxT * maxT * maxT * this1[next * 6 + 1];\r\n \t\t\tvar y = y0 + (y1 - y0) * xfactor;\r\n \t\t\treturn y;\r\n \t\t};\r\n \t\tcdb_Curve.numKeys = function (this1) {\r\n \t\t\treturn (this1.length / 6) | 0;\r\n \t\t};\r\n \t\tcdb_Curve.time = function (this1, idx) {\r\n \t\t\treturn this1[idx * 6];\r\n \t\t};\r\n \t\tcdb_Curve.value = function (this1, idx) {\r\n \t\t\treturn this1[idx * 6 + 1];\r\n \t\t};\r\n \t\tcdb_Curve.prevDt = function (this1, idx) {\r\n \t\t\tif (cdb_Curve.keyMode(this1, idx) == 1) {\r\n \t\t\t\treturn this1[idx * 6 + 2];\r\n \t\t\t} else {\r\n \t\t\t\treturn 0.0;\r\n \t\t\t}\r\n \t\t};\r\n \t\tcdb_Curve.prevDv = function (this1, idx) {\r\n \t\t\tif (cdb_Curve.keyMode(this1, idx) == 1) {\r\n \t\t\t\treturn this1[idx * 6 + 3];\r\n \t\t\t} else {\r\n \t\t\t\treturn 0.0;\r\n \t\t\t}\r\n \t\t};\r\n \t\tcdb_Curve.nextDt = function (this1, idx) {\r\n \t\t\tif (cdb_Curve.keyMode(this1, idx) == 1) {\r\n \t\t\t\treturn this1[idx * 6 + 4];\r\n \t\t\t} else {\r\n \t\t\t\treturn 0.0;\r\n \t\t\t}\r\n \t\t};\r\n \t\tcdb_Curve.nextDv = function (this1, idx) {\r\n \t\t\tif (cdb_Curve.keyMode(this1, idx) == 1) {\r\n \t\t\t\treturn this1[idx * 6 + 5];\r\n \t\t\t} else {\r\n \t\t\t\treturn 0.0;\r\n \t\t\t}\r\n \t\t};\r\n \t\tcdb_Curve.keyMode = function (this1, idx) {\r\n \t\t\tif (this1[idx * 6 + 2] == cdb_Curve.HandleData) {\r\n \t\t\t\treturn this1[idx * 6 + 3] | 0;\r\n \t\t\t}\r\n \t\t\treturn 1;\r\n \t\t};\r\n \t\tvar cdb_BakedCurve = function (from, resolution) {\r\n \t\t\tvar numKeys = (from.length / 6) | 0;\r\n \t\t\tif (numKeys == 0) {\r\n \t\t\t\tthis.width = 0;\r\n \t\t\t\treturn;\r\n \t\t\t}\r\n \t\t\tthis.offset = from[0];\r\n \t\t\tthis.width = from[(numKeys - 1) * 6] - this.offset;\r\n \t\t\tthis.points = [];\r\n \t\t\tvar _g = 0;\r\n \t\t\tvar _g1 = resolution;\r\n \t\t\twhile (_g < _g1) {\r\n \t\t\t\tvar point = _g++;\r\n \t\t\t\tvar t = (point / (resolution - 1)) * this.width;\r\n \t\t\t\tthis.points[point] = cdb_Curve.eval(from, t + this.offset);\r\n \t\t\t}\r\n \t\t};\r\n \t\tcdb_BakedCurve.__name__ = \"cdb.BakedCurve\";\r\n \t\tcdb_BakedCurve.prototype = {\r\n \t\t\teval: function (t) {\r\n \t\t\t\tif (this.width == 0.0) {\r\n \t\t\t\t\treturn 0.0;\r\n \t\t\t\t}\r\n \t\t\t\tt -= this.offset;\r\n \t\t\t\tvar pointF = (t / this.width) * (this.points.length - 1);\r\n \t\t\t\tvar point = Math.floor(pointF);\r\n \t\t\t\tif (point < 0) {\r\n \t\t\t\t\tpoint = 0;\r\n \t\t\t\t}\r\n \t\t\t\tif (point > this.points.length - 2) {\r\n \t\t\t\t\tpoint = this.points.length - 2;\r\n \t\t\t\t}\r\n \t\t\t\tvar blend = pointF - point;\r\n \t\t\t\tblend = Math.min(this.width, Math.max(0.0, blend));\r\n \t\t\t\tvar a = this.points[point];\r\n \t\t\t\tvar b = this.points[point + 1];\r\n \t\t\t\treturn (b - a) * blend + a;\r\n \t\t\t},\r\n \t\t\t__class__: cdb_BakedCurve,\r\n \t\t};\r\n \t\tvar cdb_Guid = {};\r\n \t\tcdb_Guid._new = function (s) {\r\n \t\t\treturn s;\r\n \t\t};\r\n \t\tcdb_Guid.toInt = function (this1) {\r\n \t\t\tif (this1 == null) {\r\n \t\t\t\treturn new haxe__$Int64__$_$_$Int64(0, 0);\r\n \t\t\t}\r\n \t\t\tvar k = 0;\r\n \t\t\tvar tot = new haxe__$Int64__$_$_$Int64(0, 0);\r\n \t\t\tvar _g = 0;\r\n \t\t\twhile (_g < 13) {\r\n \t\t\t\tvar i = _g++;\r\n \t\t\t\tif (i == 4 || i == 9) {\r\n \t\t\t\t\tcontinue;\r\n \t\t\t\t}\r\n \t\t\t\tvar v = cdb_Guid.CVALUES[HxOverrides.cca(this1, i)];\r\n \t\t\t\tif (v < 0) {\r\n \t\t\t\t\tthrow haxe_Exception.thrown(\"assert\");\r\n \t\t\t\t}\r\n \t\t\t\tvar a_high = v >> 31;\r\n \t\t\t\tvar a_low = v;\r\n \t\t\t\tvar b = 60 - k++ * 6;\r\n \t\t\t\tb &= 63;\r\n \t\t\t\tvar b1 =\r\n \t\t\t\t\tb == 0\r\n \t\t\t\t\t\t? new haxe__$Int64__$_$_$Int64(a_high, a_low)\r\n \t\t\t\t\t\t: b < 32\r\n \t\t\t\t\t\t? new haxe__$Int64__$_$_$Int64((a_high << b) | (a_low >>> (32 - b)), a_low << b)\r\n \t\t\t\t\t\t: new haxe__$Int64__$_$_$Int64(a_low << (b - 32), 0);\r\n \t\t\t\ttot = new haxe__$Int64__$_$_$Int64(tot.high | b1.high, tot.low | b1.low);\r\n \t\t\t}\r\n \t\t\treturn tot;\r\n \t\t};\r\n \t\tcdb_Guid.ofInt = function (v) {\r\n \t\t\tvar b_high = 0;\r\n \t\t\tvar b_low = 0;\r\n \t\t\tif (v.high == b_high && v.low == b_low) {\r\n \t\t\t\treturn cdb_Guid._new(null);\r\n \t\t\t}\r\n \t\t\tvar str = \"\";\r\n \t\t\tvar v1 = v;\r\n \t\t\tvar _g = 0;\r\n \t\t\twhile (_g < 11) {\r\n \t\t\t\tvar i = _g++;\r\n \t\t\t\tif (i == 4 || i == 8) {\r\n \t\t\t\t\tstr += \"-\";\r\n \t\t\t\t}\r\n \t\t\t\tvar b = 60 - i * 6;\r\n \t\t\t\tb &= 63;\r\n \t\t\t\tstr += cdb_Guid.CHARS.charAt(\r\n \t\t\t\t\t(b == 0\r\n \t\t\t\t\t\t? new haxe__$Int64__$_$_$Int64(v1.high, v1.low)\r\n \t\t\t\t\t\t: b < 32\r\n \t\t\t\t\t\t? new haxe__$Int64__$_$_$Int64(v1.high >> b, (v1.high << (32 - b)) | (v1.low >>> b))\r\n \t\t\t\t\t\t: new haxe__$Int64__$_$_$Int64(v1.high >> 31, v1.high >> (b - 32))\r\n \t\t\t\t\t).low & 63\r\n \t\t\t\t);\r\n \t\t\t}\r\n \t\t\treturn cdb_Guid._new(str);\r\n \t\t};\r\n \t\tvar cdb_GuidInt = {};\r\n \t\tcdb_GuidInt.toGuid = function (this1) {\r\n \t\t\treturn cdb_Guid.ofInt(this1);\r\n \t\t};\r\n \t\tcdb_GuidInt.isNull = function (this1) {\r\n \t\t\tvar b_high = 0;\r\n \t\t\tvar b_low = 0;\r\n \t\t\tif (this1.high == b_high) {\r\n \t\t\t\treturn this1.low == b_low;\r\n \t\t\t} else {\r\n \t\t\t\treturn false;\r\n \t\t\t}\r\n \t\t};\r\n \t\tcdb_GuidInt.getNull = function () {\r\n \t\t\treturn new haxe__$Int64__$_$_$Int64(0, 0);\r\n \t\t};\r\n \t\tvar cdb_Index = function (data, name) {\r\n \t\t\tthis.name = name;\r\n \t\t\tthis.initSheet(data);\r\n \t\t\tif (this.sheet == null) {\r\n \t\t\t\tthrow haxe_Exception.thrown(\"'\" + name + \"' not found in CDB data\");\r\n \t\t\t}\r\n \t\t};\r\n \t\tcdb_Index.__name__ = \"cdb.Index\";\r\n \t\tcdb_Index.initLines = function (sheet) {\r\n \t\t\tvar lines = sheet.lines;\r\n \t\t\tif (sheet.props.hasIndex) {\r\n \t\t\t\tvar _g = 0;\r\n \t\t\t\tvar _g1 = lines.length;\r\n \t\t\t\twhile (_g < _g1) {\r\n \t\t\t\t\tvar i = _g++;\r\n \t\t\t\t\tlines[i].index = i;\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tif (sheet.props.hasGroup) {\r\n \t\t\t\tvar gid = -1;\r\n \t\t\t\tvar sindex = 0;\r\n \t\t\t\twhile (true) {\r\n \t\t\t\t\tvar s = sheet.separators[sindex];\r\n \t\t\t\t\tif (s == null || s.index != 0) {\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\t}\r\n \t\t\t\t\t++sindex;\r\n \t\t\t\t\tif (s.title != null) {\r\n \t\t\t\t\t\t++gid;\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t\tif (gid < 0) {\r\n \t\t\t\t\t++gid;\r\n \t\t\t\t}\r\n \t\t\t\tvar _g = 0;\r\n \t\t\t\tvar _g1 = lines.length;\r\n \t\t\t\twhile (_g < _g1) {\r\n \t\t\t\t\tvar i = _g++;\r\n \t\t\t\t\twhile (true) {\r\n \t\t\t\t\t\tvar s = sheet.separators[sindex];\r\n \t\t\t\t\t\tif (s == null || s.index != i) {\r\n \t\t\t\t\t\t\tbreak;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tif (s.title != null) {\r\n \t\t\t\t\t\t\t++gid;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\t++sindex;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tlines[i].group = gid;\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t};\r\n \t\tcdb_Index.prototype = {\r\n \t\t\tinitSheet: function (data) {\r\n \t\t\t\tvar _g = 0;\r\n \t\t\t\tvar _g1 = data.sheets;\r\n \t\t\t\twhile (_g < _g1.length) {\r\n \t\t\t\t\tvar s = _g1[_g];\r\n \t\t\t\t\t++_g;\r\n \t\t\t\t\tif (s.name == this.name) {\r\n \t\t\t\t\t\tthis.all = s.lines;\r\n \t\t\t\t\t\tthis.sheet = s;\r\n \t\t\t\t\t\tcdb_Index.initLines(s);\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t},\r\n \t\t\t__class__: cdb_Index,\r\n \t\t};\r\n \t\tvar cdb_IndexId = function (data, name) {\r\n \t\t\tcdb_Index.call(this, data, name);\r\n \t\t};\r\n \t\tcdb_IndexId.__name__ = \"cdb.IndexId\";\r\n \t\tcdb_IndexId.__super__ = cdb_Index;\r\n \t\tcdb_IndexId.prototype = $extend(cdb_Index.prototype, {\r\n \t\t\tinitSheet: function (data) {\r\n \t\t\t\tcdb_Index.prototype.initSheet.call(this, data);\r\n \t\t\t\tthis.byId = new haxe_ds_StringMap();\r\n \t\t\t\tthis.byIndex = [];\r\n \t\t\t\tvar _g = 0;\r\n \t\t\t\tvar _g1 = this.sheet.columns;\r\n \t\t\t\twhile (_g < _g1.length) {\r\n \t\t\t\t\tvar c = _g1[_g];\r\n \t\t\t\t\t++_g;\r\n \t\t\t\t\tif (c.type._hx_index == 0) {\r\n \t\t\t\t\t\tvar cname = c.name;\r\n \t\t\t\t\t\tvar _g2 = 0;\r\n \t\t\t\t\t\tvar _g3 = this.sheet.lines;\r\n \t\t\t\t\t\twhile (_g2 < _g3.length) {\r\n \t\t\t\t\t\t\tvar a = _g3[_g2];\r\n \t\t\t\t\t\t\t++_g2;\r\n \t\t\t\t\t\t\tvar id = Reflect.field(a, cname);\r\n \t\t\t\t\t\t\tif (id != null && id != \"\") {\r\n \t\t\t\t\t\t\t\tthis.byId.h[id] = a;\r\n \t\t\t\t\t\t\t\tthis.byIndex.push(a);\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tbreak;\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t},\r\n \t\t\treload: function (data) {\r\n \t\t\t\tvar oldId = this.byId;\r\n \t\t\t\tvar oldIndex = this.byIndex;\r\n \t\t\t\tthis.initSheet(data);\r\n \t\t\t\tvar h = this.byId.h;\r\n \t\t\t\tvar id_h = h;\r\n \t\t\t\tvar id_keys = Object.keys(h);\r\n \t\t\t\tvar id_length = id_keys.length;\r\n \t\t\t\tvar id_current = 0;\r\n \t\t\t\twhile (id_current < id_length) {\r\n \t\t\t\t\tvar id = id_keys[id_current++];\r\n \t\t\t\t\tvar oldObj = oldId.h[id];\r\n \t\t\t\t\tif (oldObj == null) {\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tvar newObj = this.byId.h[id];\r\n \t\t\t\t\tvar fields = Reflect.fields(oldObj);\r\n \t\t\t\t\tvar _g = 0;\r\n \t\t\t\t\tvar _g1 = Reflect.fields(newObj);\r\n \t\t\t\t\twhile (_g < _g1.length) {\r\n \t\t\t\t\t\tvar f = _g1[_g];\r\n \t\t\t\t\t\t++_g;\r\n \t\t\t\t\t\toldObj[f] = Reflect.field(newObj, f);\r\n \t\t\t\t\t\tHxOverrides.remove(fields, f);\r\n \t\t\t\t\t}\r\n \t\t\t\t\tvar _g2 = 0;\r\n \t\t\t\t\twhile (_g2 < fields.length) {\r\n \t\t\t\t\t\tvar f1 = fields[_g2];\r\n \t\t\t\t\t\t++_g2;\r\n \t\t\t\t\t\tReflect.deleteField(oldObj, f1);\r\n \t\t\t\t\t}\r\n \t\t\t\t\tvar idx = this.byIndex.indexOf(newObj);\r\n \t\t\t\t\tif (idx >= 0) {\r\n \t\t\t\t\t\tthis.byIndex[idx] = oldObj;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tthis.sheet.lines[this.sheet.lines.indexOf(newObj)] = oldObj;\r\n \t\t\t\t\tthis.byId.h[id] = oldObj;\r\n \t\t\t\t}\r\n \t\t\t},\r\n \t\t\tget: function (k) {\r\n \t\t\t\treturn this.byId.h[k];\r\n \t\t\t},\r\n \t\t\tresolve: function (id, opt, approximate) {\r\n \t\t\t\tif (id == null) {\r\n \t\t\t\t\treturn null;\r\n \t\t\t\t}\r\n \t\t\t\tvar v = this.byId.h[id];\r\n \t\t\t\tif (v == null && approximate) {\r\n \t\t\t\t\tid = id.toLowerCase();\r\n \t\t\t\t\tvar best = 1000;\r\n \t\t\t\t\tvar _g = $keyValueIterator(haxe_ds_Map)(this.byId);\r\n \t\t\t\t\twhile (_g.hasNext()) {\r\n \t\t\t\t\t\tvar _g1 = _g.next();\r\n \t\t\t\t\t\tvar k = _g1.key;\r\n \t\t\t\t\t\tvar value = _g1.value;\r\n \t\t\t\t\t\tif (StringTools.startsWith(k.toLowerCase(), id) && k.length < best) {\r\n \t\t\t\t\t\t\tv = value;\r\n \t\t\t\t\t\t\tbest = k.length;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t\tif (v == null && !opt) {\r\n \t\t\t\t\tthrow haxe_Exception.thrown(\"Missing \" + this.name + \".\" + id);\r\n \t\t\t\t} else {\r\n \t\t\t\t\treturn v;\r\n \t\t\t\t}\r\n \t\t\t},\r\n \t\t\t__class__: cdb_IndexId,\r\n \t\t});\r\n \t\tvar haxe_Exception = function (message, previous, native) {\r\n \t\t\tError.call(this, message);\r\n \t\t\tthis.message = message;\r\n \t\t\tthis.__previousException = previous;\r\n \t\t\tthis.__nativeException = native != null ? native : this;\r\n \t\t};\r\n \t\thaxe_Exception.__name__ = \"haxe.Exception\";\r\n \t\thaxe_Exception.thrown = function (value) {\r\n \t\t\tif (value instanceof haxe_Exception) {\r\n \t\t\t\treturn value.get_native();\r\n \t\t\t} else if (value instanceof Error) {\r\n \t\t\t\treturn value;\r\n \t\t\t} else {\r\n \t\t\t\tvar e = new haxe_ValueException(value);\r\n \t\t\t\treturn e;\r\n \t\t\t}\r\n \t\t};\r\n \t\thaxe_Exception.__super__ = Error;\r\n \t\thaxe_Exception.prototype = $extend(Error.prototype, {\r\n \t\t\tget_native: function () {\r\n \t\t\t\treturn this.__nativeException;\r\n \t\t\t},\r\n \t\t\t__class__: haxe_Exception,\r\n \t\t});\r\n \t\tvar haxe_ValueException = function (value, previous, native) {\r\n \t\t\thaxe_Exception.call(this, String(value), previous, native);\r\n \t\t\tthis.value = value;\r\n \t\t};\r\n \t\thaxe_ValueException.__name__ = \"haxe.ValueException\";\r\n \t\thaxe_ValueException.__super__ = haxe_Exception;\r\n \t\thaxe_ValueException.prototype = $extend(haxe_Exception.prototype, {\r\n \t\t\t__class__: haxe_ValueException,\r\n \t\t});\r\n \t\tvar haxe_ds_Map = {};\r\n \t\thaxe_ds_Map.keyValueIterator = function (this1) {\r\n \t\t\treturn this1.keyValueIterator();\r\n \t\t};\r\n \t\tvar haxe_ds_StringMap = function () {\r\n \t\t\tthis.h = Object.create(null);\r\n \t\t};\r\n \t\thaxe_ds_StringMap.__name__ = \"haxe.ds.StringMap\";\r\n \t\thaxe_ds_StringMap.prototype = {\r\n \t\t\tkeyValueIterator: function () {\r\n \t\t\t\treturn new haxe_ds__$StringMap_StringMapKeyValueIterator(this.h);\r\n \t\t\t},\r\n \t\t\t__class__: haxe_ds_StringMap,\r\n \t\t};\r\n \t\tvar haxe_io_Error = ($hxEnums[\"haxe.io.Error\"] = {\r\n \t\t\t__ename__: true,\r\n \t\t\t__constructs__: null,\r\n \t\t\tBlocked: {_hx_name: \"Blocked\", _hx_index: 0, __enum__: \"haxe.io.Error\", toString: $estr},\r\n \t\t\tOverflow: {_hx_name: \"Overflow\", _hx_index: 1, __enum__: \"haxe.io.Error\", toString: $estr},\r\n \t\t\tOutsideBounds: {_hx_name: \"OutsideBounds\", _hx_index: 2, __enum__: \"haxe.io.Error\", toString: $estr},\r\n \t\t\tCustom:\r\n \t\t\t\t(($_ = function (e) {\r\n \t\t\t\t\treturn {_hx_index: 3, e: e, __enum__: \"haxe.io.Error\", toString: $estr};\r\n \t\t\t\t}),\r\n \t\t\t\t($_._hx_name = \"Custom\"),\r\n \t\t\t\t($_.__params__ = [\"e\"]),\r\n \t\t\t\t$_),\r\n \t\t});\r\n \t\thaxe_io_Error.__constructs__ = [\r\n \t\t\thaxe_io_Error.Blocked,\r\n \t\t\thaxe_io_Error.Overflow,\r\n \t\t\thaxe_io_Error.OutsideBounds,\r\n \t\t\thaxe_io_Error.Custom,\r\n \t\t];\r\n \t\tvar haxe_iterators_ArrayIterator = function (array) {\r\n \t\t\tthis.current = 0;\r\n \t\t\tthis.array = array;\r\n \t\t};\r\n \t\thaxe_iterators_ArrayIterator.__name__ = \"haxe.iterators.ArrayIterator\";\r\n \t\thaxe_iterators_ArrayIterator.prototype = {\r\n \t\t\thasNext: function () {\r\n \t\t\t\treturn this.current < this.array.length;\r\n \t\t\t},\r\n \t\t\tnext: function () {\r\n \t\t\t\treturn this.array[this.current++];\r\n \t\t\t},\r\n \t\t\t__class__: haxe_iterators_ArrayIterator,\r\n \t\t};\r\n \t\tvar js_Boot = function () {};\r\n \t\tjs_Boot.__name__ = \"js.Boot\";\r\n \t\tjs_Boot.__string_rec = function (o, s) {\r\n \t\t\tif (o == null) {\r\n \t\t\t\treturn \"null\";\r\n \t\t\t}\r\n \t\t\tif (s.length >= 5) {\r\n \t\t\t\treturn \"<...>\";\r\n \t\t\t}\r\n \t\t\tvar t = typeof o;\r\n \t\t\tif (t == \"function\" && (o.__name__ || o.__ename__)) {\r\n \t\t\t\tt = \"object\";\r\n \t\t\t}\r\n \t\t\tswitch (t) {\r\n \t\t\t\tcase \"function\":\r\n \t\t\t\t\treturn \"<function>\";\r\n \t\t\t\tcase \"object\":\r\n \t\t\t\t\tif (o.__enum__) {\r\n \t\t\t\t\t\tvar e = $hxEnums[o.__enum__];\r\n \t\t\t\t\t\tvar con = e.__constructs__[o._hx_index];\r\n \t\t\t\t\t\tvar n = con._hx_name;\r\n \t\t\t\t\t\tif (con.__params__) {\r\n \t\t\t\t\t\t\ts = s + \"\\t\";\r\n \t\t\t\t\t\t\treturn (\r\n \t\t\t\t\t\t\t\tn +\r\n \t\t\t\t\t\t\t\t\"(\" +\r\n \t\t\t\t\t\t\t\t(function ($this) {\r\n \t\t\t\t\t\t\t\t\tvar $r;\r\n \t\t\t\t\t\t\t\t\tvar _g = [];\r\n \t\t\t\t\t\t\t\t\t{\r\n \t\t\t\t\t\t\t\t\t\tvar _g1 = 0;\r\n \t\t\t\t\t\t\t\t\t\tvar _g2 = con.__params__;\r\n \t\t\t\t\t\t\t\t\t\twhile (true) {\r\n \t\t\t\t\t\t\t\t\t\t\tif (!(_g1 < _g2.length)) {\r\n \t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n \t\t\t\t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\t\t\t\tvar p = _g2[_g1];\r\n \t\t\t\t\t\t\t\t\t\t\t_g1 = _g1 + 1;\r\n \t\t\t\t\t\t\t\t\t\t\t_g.push(js_Boot.__string_rec(o[p], s));\r\n \t\t\t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\t\t$r = _g;\r\n \t\t\t\t\t\t\t\t\treturn $r;\r\n \t\t\t\t\t\t\t\t})(this).join(\",\") +\r\n \t\t\t\t\t\t\t\t\")\"\r\n \t\t\t\t\t\t\t);\r\n \t\t\t\t\t\t} else {\r\n \t\t\t\t\t\t\treturn n;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t\tif (o instanceof Array) {\r\n \t\t\t\t\t\tvar str = \"[\";\r\n \t\t\t\t\t\ts += \"\\t\";\r\n \t\t\t\t\t\tvar _g = 0;\r\n \t\t\t\t\t\tvar _g1 = o.length;\r\n \t\t\t\t\t\twhile (_g < _g1) {\r\n \t\t\t\t\t\t\tvar i = _g++;\r\n \t\t\t\t\t\t\tstr += (i > 0 ? \",\" : \"\") + js_Boot.__string_rec(o[i], s);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tstr += \"]\";\r\n \t\t\t\t\t\treturn str;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tvar tostr;\r\n \t\t\t\t\ttry {\r\n \t\t\t\t\t\ttostr = o.toString;\r\n \t\t\t\t\t} catch (_g) {\r\n \t\t\t\t\t\treturn \"???\";\r\n \t\t\t\t\t}\r\n \t\t\t\t\tif (tostr != null && tostr != Object.toString && typeof tostr == \"function\") {\r\n \t\t\t\t\t\tvar s2 = o.toString();\r\n \t\t\t\t\t\tif (s2 != \"[object Object]\") {\r\n \t\t\t\t\t\t\treturn s2;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t\tvar str = \"{\\n\";\r\n \t\t\t\t\ts += \"\\t\";\r\n \t\t\t\t\tvar hasp = o.hasOwnProperty != null;\r\n \t\t\t\t\tvar k = null;\r\n \t\t\t\t\tfor (k in o) {\r\n \t\t\t\t\t\tif (hasp && !o.hasOwnProperty(k)) {\r\n \t\t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tif (\r\n \t\t\t\t\t\t\tk == \"prototype\" ||\r\n \t\t\t\t\t\t\tk == \"__class__\" ||\r\n \t\t\t\t\t\t\tk == \"__super__\" ||\r\n \t\t\t\t\t\t\tk == \"__interfaces__\" ||\r\n \t\t\t\t\t\t\tk == \"__properties__\"\r\n \t\t\t\t\t\t) {\r\n \t\t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tif (str.length != 2) {\r\n \t\t\t\t\t\t\tstr += \", \\n\";\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tstr += s + k + \" : \" + js_Boot.__string_rec(o[k], s);\r\n \t\t\t\t\t}\r\n \t\t\t\t\ts = s.substring(1);\r\n \t\t\t\t\tstr += \"\\n\" + s + \"}\";\r\n \t\t\t\t\treturn str;\r\n \t\t\t\tcase \"string\":\r\n \t\t\t\t\treturn o;\r\n \t\t\t\tdefault:\r\n \t\t\t\t\treturn String(o);\r\n \t\t\t}\r\n \t\t};\r\n \t\tif (String.fromCodePoint == null)\r\n \t\t\tString.fromCodePoint = function (c) {\r\n \t\t\t\treturn c < 0x10000\r\n \t\t\t\t\t? String.fromCharCode(c)\r\n \t\t\t\t\t: String.fromCharCode((c >> 10) + 0xd7c0) + String.fromCharCode((c & 0x3ff) + 0xdc00);\r\n \t\t\t};\r\n \t\tObject.defineProperty(String.prototype, \"__class__\", {value: String, enumerable: false, writable: true});\r\n \t\tString.__name__ = \"String\";\r\n \t\tArray.__name__ = \"Array\";\r\n \t\tjs_Boot.__toStr = {}.toString;\r\n \t\tif (ArrayBuffer.prototype.slice == null) {\r\n \t\t\tArrayBuffer.prototype.slice = js_lib__$ArrayBuffer_ArrayBufferCompat.sliceImpl;\r\n \t\t}\r\n \t\tcdb_TileMode.Tile = \"tile\";\r\n \t\tcdb_TileMode.Ground = \"ground\";\r\n \t\tcdb_TileMode.Border = \"border\";\r\n \t\tcdb_TileMode.Object = \"object\";\r\n \t\tcdb_TileMode.Group = \"group\";\r\n \t\tcdb_Lang.IGNORE_EXPORT_FIELD = \"__ignoreLoc__\";\r\n \t\tcdb_Lang.r_spaces = new EReg(\"^[ \\t\\r\\n]+$\", \"\");\r\n \t\tcdb_Curve.HandleData = -10000000000;\r\n \t\tcdb_Guid.CHARS = \"#&0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\r\n \t\tcdb_Guid.CVALUES = (function ($this) {\r\n \t\t\tvar $r;\r\n \t\t\tvar _g = [];\r\n \t\t\t{\r\n \t\t\t\tvar _g1 = 0;\r\n \t\t\t\twhile (_g1 < 128) {\r\n \t\t\t\t\tvar i = _g1++;\r\n \t\t\t\t\t_g.push(cdb_Guid.CHARS.indexOf(String.fromCodePoint(i)));\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\t$r = _g;\r\n \t\t\treturn $r;\r\n \t\t})(this);\r\n \t\tMain.main();\r\n \t})(\r\n \t\ttypeof window != \"undefined\"\r\n \t\t\t? window\r\n \t\t\t: typeof global != \"undefined\"\r\n \t\t\t? global\r\n \t\t\t: typeof self != \"undefined\"\r\n \t\t\t? self\r\n \t\t\t: this\r\n \t);\r\n\r\n \treturn cdb_Data;\r\n }\r\n\r\n module.exports = {run};\r\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_run = module.exports.run;\n\n}, {});\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n","// I am the facade module who provides access to the CommonJS module './main.js'~\nimport { __cjsMetaURL as req } from './main.js';\nimport loader from 'cce:/internal/ml/cjs-loader.mjs';\nif (!req) {\n    loader.throwInvalidWrapper('./main.js', import.meta.url);\n}\nloader.require(req);\nexport * from './main.js';\nimport { default as d } from './main.js'\nexport { d as default };","import { IPiece } from \"db://assets/scripts/game/domain/Contract\";\r\nimport { BlastGroupConfig } from \"db://assets/scripts/shared/castledb/storage/sheets/Blast\";\r\n\r\n\r\nexport class Piece implements IPiece {\r\n\r\n    readonly id: string;\r\n    readonly type: BlastGroupConfig;\r\n\r\n    constructor(id: string, type: BlastGroupConfig) {\r\n\r\n        this.id = id;\r\n        this.type = type;\r\n    }\r\n}","import { Piece } from \"db://assets/scripts/game/domain/blast/Piece\";\r\nimport { IIdFactory, IPiece } from \"db://assets/scripts/game/domain/Contract\";\r\nimport { BlastGroupConfig } from \"db://assets/scripts/shared/castledb/storage/sheets/Blast\";\r\n\r\n\r\nexport class PieceFactory {\r\n\r\n    private readonly idFactory: IIdFactory;\r\n\r\n    constructor(idFactory: IIdFactory) {\r\n\r\n        this.idFactory = idFactory;\r\n    }\r\n\r\n    public create(config: BlastGroupConfig): IPiece {\r\n\r\n        return new Piece(this.idFactory.newId(), config);\r\n    }\r\n}","\r\nexport class Random {\r\n\r\n    private readonly A: number = 1664525;\r\n    private readonly C: number = 1013904223;\r\n    private readonly M: number = 4294967296;\r\n\r\n    private seed: number;\r\n\r\n    public constructor(seed: number) {\r\n\r\n        this.seed = seed;\r\n    }\r\n\r\n    public next(): number {\r\n\r\n        this.seed = (this.A * this.seed + this.C) % this.M;\r\n\r\n        return this.seed / this.M;\r\n    }\r\n\r\n    public nextRange(min: number, max: number): number {\r\n\r\n        return this.next() * (max - min) + min;\r\n    }\r\n\r\n    public nextRangeInt(min: number, max: number): number {\r\n\r\n        return Math.floor(this.next() * (max - min)) + min;\r\n    }\r\n}\r\n\r\nexport class WeigthedRandomizer<T> {\r\n\r\n    public readonly items: readonly T[];\r\n\r\n    private readonly random: Random;\r\n    private readonly cumulativeWeights: readonly number[];\r\n\r\n    constructor(random: Random, generator: Generator<[T, number]>) {\r\n\r\n        const items: T[] = [];\r\n        const cumulativeWeights: number[] = [];\r\n\r\n        let cumulativeWeight: number = 0;\r\n\r\n        for (const [item, weight] of generator) {\r\n\r\n            cumulativeWeight += weight;\r\n\r\n            items.push(item);\r\n            cumulativeWeights.push(cumulativeWeight);\r\n        }\r\n\r\n        this.random = random;\r\n        this.items = items;\r\n        this.cumulativeWeights = cumulativeWeights;\r\n    }\r\n\r\n    public next(): T {\r\n\r\n        const maxWeight = this.cumulativeWeights[this.cumulativeWeights.length - 1];\r\n        const randomWeight = this.random.nextRangeInt(0, maxWeight);\r\n\r\n        for (let i = 0; i < this.cumulativeWeights.length; i++) {\r\n\r\n            if (randomWeight < this.cumulativeWeights[i])\r\n                return this.items[i];\r\n        }\r\n\r\n        return this.items[this.items.length - 1];\r\n    }\r\n}","import { IRng } from \"db://assets/scripts/game/domain/Contract\";\r\nimport { BlastGroupConfig as BlastGroupConfig } from \"db://assets/scripts/shared/castledb/storage/sheets/Blast\";\r\nimport { IBlastGroupSetupConfig, ILevelConfig } from \"db://assets/scripts/shared/castledb/storage/sheets/Levels\";\r\nimport { Random, WeigthedRandomizer } from \"db://assets/scripts/shared/utils/Random\";\r\n\r\n\r\nexport class RandomService implements IRng {\r\n\r\n    private colorGroupRandomizer: WeigthedRandomizer<BlastGroupConfig>;\r\n    private random: Random;\r\n\r\n    constructor(levelConfig: ILevelConfig) {\r\n\r\n        this.random = new Random(levelConfig.randomSeed);\r\n\r\n        const colorGroupProbabilities = this.toColorGroupProbabilities(levelConfig.blast.colorGroupSetup);\r\n\r\n        this.colorGroupRandomizer = new WeigthedRandomizer<BlastGroupConfig>(\r\n            this.random,\r\n            colorGroupProbabilities\r\n        );\r\n    }\r\n\r\n    public next(): BlastGroupConfig {\r\n        return this.colorGroupRandomizer.next();\r\n    }\r\n\r\n    private *toColorGroupProbabilities(\r\n        chipConfigs: IBlastGroupSetupConfig[]\r\n    ): Generator<[BlastGroupConfig, number]> {\r\n\r\n        for (const chipConfig of chipConfigs) {\r\n\r\n            const colorGroup = chipConfig.group;\r\n\r\n            yield [colorGroup, chipConfig.probability];\r\n        }\r\n    }\r\n}","import { ICell, IGameState } from \"db://assets/scripts/game/domain/Contract\";\r\nimport { GameContext } from \"db://assets/scripts/game/domain/GameContext\";\r\nimport { DefeatState } from \"db://assets/scripts/game/domain/gameState/DefeatState\";\r\nimport { TilesFallingState } from \"db://assets/scripts/game/domain/gameState/TilesFallingState\";\r\nimport { VictoryState } from \"db://assets/scripts/game/domain/gameState/VictoryState\";\r\nimport { FloodFillGroupFinder } from \"db://assets/scripts/game/domain/service/FloodFillGroupFinder\";\r\n\r\nexport class ReadyState implements IGameState {\r\n\r\n\tprivate static PTS_PER_TILE = 10;\r\n\r\n\tconstructor(\r\n\t\tprivate ctx: GameContext,\r\n\t\tprivate clusters = new FloodFillGroupFinder()\r\n\t) { }\r\n\r\n\tenter() {\r\n\r\n\t\tthis.updateStats();\r\n\r\n\t\tthis.checkGameCompletionCondition();\r\n\t}\r\n\r\n\thandleTap(cell: ICell) {\r\n\r\n\t\tconst cluster = this.clusters.find(this.ctx.grid, cell);\r\n\r\n\t\tif (cluster.length < 2) return;\r\n\r\n\t\tcluster.forEach(c => c.piece = null);\r\n\r\n\t\tthis.ctx.progress.addScore(cluster.length * ReadyState.PTS_PER_TILE);\r\n\t\tthis.ctx.progress.consumeTurn();\r\n\r\n\t\tthis.ctx.view.clear(cluster).then(() =>\r\n\t\t\tthis.ctx.setState(new TilesFallingState(this.ctx))\r\n\t\t);\r\n\r\n\t\tthis.updateStats();\r\n\t}\r\n\r\n\tprivate updateStats() {\r\n\r\n\t\tconst view = this.ctx.view;\r\n\t\tconst progress = this.ctx.progress;\r\n\r\n\t\tif (view.updateTurns)\r\n\t\t\tview.updateTurns(progress.movesLeft);\r\n\t\tif (view.updateScore)\r\n\t\t\tview.updateScore(progress.score, progress.targetScore);\r\n\t}\r\n\r\n\tprivate checkGameCompletionCondition() {\r\n\r\n\t\tif (this.ctx.progress.hasWon) {\r\n\t\t\tthis.ctx.setState(new VictoryState(this.ctx));\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.ctx.progress.outOfMoves) {\r\n\t\t\tthis.ctx.setState(new DefeatState(this.ctx));\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n}","import { IGrid, IIdFactory, IRefillService, IRng } from \"db://assets/scripts/game/domain/Contract\";\r\nimport { Grid } from \"db://assets/scripts/game/domain/Grid\";\r\nimport { DropMove } from \"db://assets/scripts/game/domain/service/GravityResolver\";\r\nimport { BlastGroupConfig } from \"db://assets/scripts/shared/castledb/storage/sheets/Blast\";\r\n\r\nexport type SpawnMove = DropMove;\r\n\r\nexport class RefillService implements IRefillService {\r\n\r\n\trefill(\r\n\t\tgrid: Grid,\r\n\t\trng: IRng,\r\n\t\tidFactory: IIdFactory\r\n\t): SpawnMove[] {\r\n\r\n\t\tconst result = [];\r\n\t\tconst additivesCount = [];\r\n\r\n\t\tfor (let y = 0; y < grid.height; y++) {\r\n\r\n\t\t\tfor (let x = 0; x < grid.width; x++) {\r\n\r\n\t\t\t\tconst cell = grid.getCell(x, y);\r\n\r\n\t\t\t\tif (cell.piece)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tcell.piece = { id: idFactory.newId(), type: rng.next() };\r\n\r\n\t\t\t\tif (!additivesCount[x])\r\n\t\t\t\t\tadditivesCount[x] = 0;\r\n\r\n\t\t\t\tresult.push({\r\n\t\t\t\t\tid: cell.piece.id,\r\n\t\t\t\t\tfromX: x,\r\n\t\t\t\t\tfromY: additivesCount[x] + grid.height,\r\n\t\t\t\t\ttoY: y\r\n\t\t\t\t});\r\n\r\n\t\t\t\tadditivesCount[x]++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n}","import { _decorator, Component, Label } from 'cc';\r\n\r\nconst { ccclass, property, requireComponent } = _decorator;\r\n\r\n\r\n@ccclass(\"StatsView\")\r\nexport class StatsView extends Component {\r\n\r\n\tprivate static VICTORY_LOCALE = \"Победа!!!\";\r\n\tprivate static DEFEAT_LOCALE = \"Поражение :(\";\r\n\r\n\t@property(Label)\r\n\tprivate turnsCounter: Label;\r\n\r\n\t@property(Label)\r\n\tprivate scoreCounter: Label;\r\n\r\n\t@property(Label)\r\n\tprivate gameEnd: Label;\r\n\r\n\tpublic showDefeat(): Promise<void> {\r\n\t\tthis.gameEnd.node.active = true;\r\n\t\tthis.gameEnd.string = StatsView.DEFEAT_LOCALE;\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\r\n\tpublic showVictory(): Promise<void> {\r\n\t\tthis.gameEnd.node.active = true;\r\n\t\tthis.gameEnd.string = StatsView.VICTORY_LOCALE;\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\r\n\tpublic updateScore(value: number, target: number) {\r\n\r\n\t\treturn this.scoreCounter.string = `${value} / ${target}`;\r\n\t}\r\n\r\n\tpublic updateTurns(value: number) {\r\n\r\n\t\tthis.turnsCounter.string = `${value}`;\r\n\t}\r\n\r\n\r\n}","import { log } from \"cc\";\r\nimport { ICell, IGameState } from \"db://assets/scripts/game/domain/Contract\";\r\nimport { GameContext } from \"db://assets/scripts/game/domain/GameContext\";\r\nimport { ReadyState } from \"db://assets/scripts/game/domain/gameState/ReadyState\";\r\n\r\nexport class TilesFallingState implements IGameState {\r\n\r\n\tconstructor(\r\n\t\tprivate ctx: GameContext\r\n\t) { }\r\n\r\n\tasync enter(): Promise<void> {\r\n\r\n\t\tconst moves = this.ctx.gravity.applyGravity(this.ctx.grid);\r\n\t\tconst gravityBeforePromise = this.ctx.view.dropGravity(moves);\r\n\r\n\t\tconst spawnMoves = this.ctx.refill.refill(this.ctx.grid, this.ctx.rng, this.ctx.idFactory);\r\n\r\n\t\tlog(moves);\r\n\t\tlog(spawnMoves);\r\n\r\n\t\tawait this.ctx.view.refill(spawnMoves, this.ctx.grid.cells);\r\n\t\tawait gravityBeforePromise;\r\n\r\n\t\tthis.ctx.setState(new ReadyState(this.ctx));\r\n\t}\r\n\r\n\thandleTap(cell: ICell): Promise<void> | void { }\r\n}","import { BaseCdbSheet, RawSheetData } from \"db://assets/scripts/shared/castledb/BaseCdbSheet\";\r\nimport { ILevelConfig } from \"db://assets/scripts/shared/castledb/storage/sheets/Levels\";\r\nimport { BlastGroupConfig } from \"db://assets/scripts/shared/castledb/storage/sheets/Blast\";\r\n\r\nexport class GameLevelsSheet extends BaseCdbSheet<ILevelConfig> { }\r\nexport class BlastGroupsSheet extends BaseCdbSheet<BlastGroupConfig> { }\r\n\r\nexport type SheetsClassMap = {\r\n\r\n    gameLevels: GameLevelsSheet,\r\n    blastGroups: BlastGroupsSheet,\r\n};\r\n\r\nexport const SheetConstructors: {\r\n    [K in keyof SheetsClassMap]: new (raw: RawSheetData<any>, resolver: any) => SheetsClassMap[K]\r\n} = {\r\n\r\n    gameLevels: GameLevelsSheet,\r\n    blastGroups: BlastGroupsSheet,\r\n};","import { ICell, IGameState } from \"db://assets/scripts/game/domain/Contract\";\r\nimport { GameContext } from \"db://assets/scripts/game/domain/GameContext\";\r\n\r\nexport class VictoryState implements IGameState {\r\n\r\n\tconstructor(private ctx: GameContext) { }\r\n\r\n\tasync enter() {\r\n\t\tawait this.ctx.view.showVictory?.();\r\n\t}\r\n\r\n\thandleTap(cell: ICell): Promise<void> | void { }\r\n}\r\n","import { ICell, IViewPort } from \"db://assets/scripts/game/domain/Contract\";\r\nimport { DropMove } from \"db://assets/scripts/game/domain/service/GravityResolver\";\r\nimport { SpawnMove } from \"db://assets/scripts/game/domain/service/RefillService\";\r\nimport { BlastBoardView } from \"db://assets/scripts/game/view/blast/BlastBoardView\";\r\nimport { StatsView } from \"db://assets/scripts/game/view/stats/StatsView\";\r\n\r\nexport class ViewFacade implements IViewPort {\r\n\r\n\tconstructor(\r\n\t\tpublic readonly boardView: BlastBoardView,\r\n\t\tpublic readonly hud: StatsView\r\n\t) { }\r\n\r\n\tshowDefeat(): Promise<void> {\r\n\t\treturn this.hud.showDefeat();\r\n\t}\r\n\r\n\tshowVictory(): Promise<void> {\r\n\t\treturn this.hud.showVictory();\r\n\t}\r\n\r\n\tupdateTurns(value: number): Promise<void> {\r\n\t\tthis.hud.updateTurns(value);\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\r\n\tupdateScore(value: number, target: number): Promise<void> {\r\n\t\tthis.hud.updateScore(value, target);\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\r\n\tinitGrid(width: number, height: number, cells: ReadonlyArray<ICell>): Promise<void> {\r\n\t\treturn this.boardView.initGrid(width, height, cells);\r\n\t}\r\n\r\n\tclear(cells: ReadonlyArray<ICell>): Promise<void> {\r\n\t\treturn this.boardView.clear(cells);\r\n\t}\r\n\r\n\tdropGravity(moves: ReadonlyArray<DropMove>): Promise<void> {\r\n\t\treturn this.boardView.dropGravity(moves);\r\n\t}\r\n\r\n\trefill(moves: ReadonlyArray<SpawnMove>, cells: ReadonlyArray<ICell>): Promise<void> {\r\n\t\treturn this.boardView.refill(moves, cells);\r\n\t}\r\n}"]}